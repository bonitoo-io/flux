// DO NOT EDIT: This file is autogenerated via the builtin command.

package bigpanda

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 15,
					Line:   60,
				},
				File:   "bigpanda.flux",
				Source: "package bigpanda\n\nimport \"http\"\nimport \"json\"\nimport \"strings\"\n\n//builtin toUnixTime : (v: string) => int\n\n\noption defaultUrl = \"https://api.bigpanda.io/data/v2/alerts\"\noption defaultTokenPrefix = \"Bearer\"\n\n// severity levels on status objects can be one of the following: ok,info,warn,crit,unknown\n// but BigPanda accepts one of [ ok, critical, warning, acknowledged ].\n// statusFromLevel turns a level from the status object into a pagerduty severity\nstatusFromLevel = (level) => {\n    lvl = strings.toLower(v:level)\n    sev = if lvl == \"warn\" then \"warning\"\n        else if lvl == \"crit\" then \"critical\"\n        else if lvl == \"info\" then \"ok\"\n        else if lvl == \"ok\" then \"ok\"\n        else \"critical\"\n    return sev\n}\n\n// `sendAlert` sends a single alert to BigPanda as described in https://docs.bigpanda.io/reference#alerts API. \n// `token` - string - BigPanda authorization Bearer token\n// `url` - string - base URL of [BigPanda API](https://docs.bigpanda.io/reference#alerts).\n// `appKey` - string - BigPanda App Key.\n// `status` - string - Status of the BigPanda alert. One of [ ok, critical, warning, acknowledged ].\n// `rec` - record - additional data appended to alert\n\nsendAlert = (url, token, appKey, status, rec) => {\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\" : defaultTokenPrefix + \" \" + token,\n    }\n    data = {rec with app_key: appKey, status: status}\n    return http.post(headers: headers, url: url, data: json.encode(v:data))\n}\n\n// `endpoint` creates a factory function that creates a target function for pipeline `|>` to send alert to BigPanda for each table row.\n// `url` - string - base URL of [BigPanda API](https://docs.bigpanda.io/reference#alerts).\n// `token` - string - BigPanda authorization Bearer token\n// `appKey` - string - BigPanda App Key.\n// The returned factory function accepts a `mapFn` parameter.\n// // The `mapFn` must return an object with all properties defined in the `sendAlert` function arguments (except url, apiKey and appKey).\nendpoint = (url=defaultUrl, token, appKey) =>\n    (mapFn) =>\n        (tables=<-) => tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            })",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 61,
							Line:   10,
						},
						File:   "bigpanda.flux",
						Source: "defaultUrl = \"https://api.bigpanda.io/data/v2/alerts\"",
						Start: ast.Position{
							Column: 8,
							Line:   10,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   10,
							},
							File:   "bigpanda.flux",
							Source: "defaultUrl",
							Start: ast.Position{
								Column: 8,
								Line:   10,
							},
						},
					},
					Name: "defaultUrl",
				},
				Init: &ast.StringLiteral{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 61,
								Line:   10,
							},
							File:   "bigpanda.flux",
							Source: "\"https://api.bigpanda.io/data/v2/alerts\"",
							Start: ast.Position{
								Column: 21,
								Line:   10,
							},
						},
					},
					Value: "https://api.bigpanda.io/data/v2/alerts",
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 61,
						Line:   10,
					},
					File:   "bigpanda.flux",
					Source: "option defaultUrl = \"https://api.bigpanda.io/data/v2/alerts\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
		}, &ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 37,
							Line:   11,
						},
						File:   "bigpanda.flux",
						Source: "defaultTokenPrefix = \"Bearer\"",
						Start: ast.Position{
							Column: 8,
							Line:   11,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   11,
							},
							File:   "bigpanda.flux",
							Source: "defaultTokenPrefix",
							Start: ast.Position{
								Column: 8,
								Line:   11,
							},
						},
					},
					Name: "defaultTokenPrefix",
				},
				Init: &ast.StringLiteral{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 37,
								Line:   11,
							},
							File:   "bigpanda.flux",
							Source: "\"Bearer\"",
							Start: ast.Position{
								Column: 29,
								Line:   11,
							},
						},
					},
					Value: "Bearer",
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 37,
						Line:   11,
					},
					File:   "bigpanda.flux",
					Source: "option defaultTokenPrefix = \"Bearer\"",
					Start: ast.Position{
						Column: 1,
						Line:   11,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   24,
					},
					File:   "bigpanda.flux",
					Source: "statusFromLevel = (level) => {\n    lvl = strings.toLower(v:level)\n    sev = if lvl == \"warn\" then \"warning\"\n        else if lvl == \"crit\" then \"critical\"\n        else if lvl == \"info\" then \"ok\"\n        else if lvl == \"ok\" then \"ok\"\n        else \"critical\"\n    return sev\n}",
					Start: ast.Position{
						Column: 1,
						Line:   16,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   16,
						},
						File:   "bigpanda.flux",
						Source: "statusFromLevel",
						Start: ast.Position{
							Column: 1,
							Line:   16,
						},
					},
				},
				Name: "statusFromLevel",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   24,
						},
						File:   "bigpanda.flux",
						Source: "(level) => {\n    lvl = strings.toLower(v:level)\n    sev = if lvl == \"warn\" then \"warning\"\n        else if lvl == \"crit\" then \"critical\"\n        else if lvl == \"info\" then \"ok\"\n        else if lvl == \"ok\" then \"ok\"\n        else \"critical\"\n    return sev\n}",
						Start: ast.Position{
							Column: 19,
							Line:   16,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   24,
							},
							File:   "bigpanda.flux",
							Source: "{\n    lvl = strings.toLower(v:level)\n    sev = if lvl == \"warn\" then \"warning\"\n        else if lvl == \"crit\" then \"critical\"\n        else if lvl == \"info\" then \"ok\"\n        else if lvl == \"ok\" then \"ok\"\n        else \"critical\"\n    return sev\n}",
							Start: ast.Position{
								Column: 30,
								Line:   16,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   17,
								},
								File:   "bigpanda.flux",
								Source: "lvl = strings.toLower(v:level)",
								Start: ast.Position{
									Column: 5,
									Line:   17,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   17,
									},
									File:   "bigpanda.flux",
									Source: "lvl",
									Start: ast.Position{
										Column: 5,
										Line:   17,
									},
								},
							},
							Name: "lvl",
						},
						Init: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 34,
											Line:   17,
										},
										File:   "bigpanda.flux",
										Source: "v:level",
										Start: ast.Position{
											Column: 27,
											Line:   17,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 34,
												Line:   17,
											},
											File:   "bigpanda.flux",
											Source: "v:level",
											Start: ast.Position{
												Column: 27,
												Line:   17,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   17,
												},
												File:   "bigpanda.flux",
												Source: "v",
												Start: ast.Position{
													Column: 27,
													Line:   17,
												},
											},
										},
										Name: "v",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 34,
													Line:   17,
												},
												File:   "bigpanda.flux",
												Source: "level",
												Start: ast.Position{
													Column: 29,
													Line:   17,
												},
											},
										},
										Name: "level",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   17,
									},
									File:   "bigpanda.flux",
									Source: "strings.toLower(v:level)",
									Start: ast.Position{
										Column: 11,
										Line:   17,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   17,
										},
										File:   "bigpanda.flux",
										Source: "strings.toLower",
										Start: ast.Position{
											Column: 11,
											Line:   17,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   17,
											},
											File:   "bigpanda.flux",
											Source: "strings",
											Start: ast.Position{
												Column: 11,
												Line:   17,
											},
										},
									},
									Name: "strings",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 26,
												Line:   17,
											},
											File:   "bigpanda.flux",
											Source: "toLower",
											Start: ast.Position{
												Column: 19,
												Line:   17,
											},
										},
									},
									Name: "toLower",
								},
							},
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   22,
								},
								File:   "bigpanda.flux",
								Source: "sev = if lvl == \"warn\" then \"warning\"\n        else if lvl == \"crit\" then \"critical\"\n        else if lvl == \"info\" then \"ok\"\n        else if lvl == \"ok\" then \"ok\"\n        else \"critical\"",
								Start: ast.Position{
									Column: 5,
									Line:   18,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   18,
									},
									File:   "bigpanda.flux",
									Source: "sev",
									Start: ast.Position{
										Column: 5,
										Line:   18,
									},
								},
							},
							Name: "sev",
						},
						Init: &ast.ConditionalExpression{
							Alternate: &ast.ConditionalExpression{
								Alternate: &ast.ConditionalExpression{
									Alternate: &ast.ConditionalExpression{
										Alternate: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 24,
														Line:   22,
													},
													File:   "bigpanda.flux",
													Source: "\"critical\"",
													Start: ast.Position{
														Column: 14,
														Line:   22,
													},
												},
											},
											Value: "critical",
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 24,
													Line:   22,
												},
												File:   "bigpanda.flux",
												Source: "if lvl == \"ok\" then \"ok\"\n        else \"critical\"",
												Start: ast.Position{
													Column: 14,
													Line:   21,
												},
											},
										},
										Consequent: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 38,
														Line:   21,
													},
													File:   "bigpanda.flux",
													Source: "\"ok\"",
													Start: ast.Position{
														Column: 34,
														Line:   21,
													},
												},
											},
											Value: "ok",
										},
										Test: &ast.BinaryExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 28,
														Line:   21,
													},
													File:   "bigpanda.flux",
													Source: "lvl == \"ok\"",
													Start: ast.Position{
														Column: 17,
														Line:   21,
													},
												},
											},
											Left: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 20,
															Line:   21,
														},
														File:   "bigpanda.flux",
														Source: "lvl",
														Start: ast.Position{
															Column: 17,
															Line:   21,
														},
													},
												},
												Name: "lvl",
											},
											Operator: 17,
											Right: &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   21,
														},
														File:   "bigpanda.flux",
														Source: "\"ok\"",
														Start: ast.Position{
															Column: 24,
															Line:   21,
														},
													},
												},
												Value: "ok",
											},
										},
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 24,
												Line:   22,
											},
											File:   "bigpanda.flux",
											Source: "if lvl == \"info\" then \"ok\"\n        else if lvl == \"ok\" then \"ok\"\n        else \"critical\"",
											Start: ast.Position{
												Column: 14,
												Line:   20,
											},
										},
									},
									Consequent: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   20,
												},
												File:   "bigpanda.flux",
												Source: "\"ok\"",
												Start: ast.Position{
													Column: 36,
													Line:   20,
												},
											},
										},
										Value: "ok",
									},
									Test: &ast.BinaryExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   20,
												},
												File:   "bigpanda.flux",
												Source: "lvl == \"info\"",
												Start: ast.Position{
													Column: 17,
													Line:   20,
												},
											},
										},
										Left: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   20,
													},
													File:   "bigpanda.flux",
													Source: "lvl",
													Start: ast.Position{
														Column: 17,
														Line:   20,
													},
												},
											},
											Name: "lvl",
										},
										Operator: 17,
										Right: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   20,
													},
													File:   "bigpanda.flux",
													Source: "\"info\"",
													Start: ast.Position{
														Column: 24,
														Line:   20,
													},
												},
											},
											Value: "info",
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   22,
										},
										File:   "bigpanda.flux",
										Source: "if lvl == \"crit\" then \"critical\"\n        else if lvl == \"info\" then \"ok\"\n        else if lvl == \"ok\" then \"ok\"\n        else \"critical\"",
										Start: ast.Position{
											Column: 14,
											Line:   19,
										},
									},
								},
								Consequent: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   19,
											},
											File:   "bigpanda.flux",
											Source: "\"critical\"",
											Start: ast.Position{
												Column: 36,
												Line:   19,
											},
										},
									},
									Value: "critical",
								},
								Test: &ast.BinaryExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   19,
											},
											File:   "bigpanda.flux",
											Source: "lvl == \"crit\"",
											Start: ast.Position{
												Column: 17,
												Line:   19,
											},
										},
									},
									Left: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   19,
												},
												File:   "bigpanda.flux",
												Source: "lvl",
												Start: ast.Position{
													Column: 17,
													Line:   19,
												},
											},
										},
										Name: "lvl",
									},
									Operator: 17,
									Right: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   19,
												},
												File:   "bigpanda.flux",
												Source: "\"crit\"",
												Start: ast.Position{
													Column: 24,
													Line:   19,
												},
											},
										},
										Value: "crit",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   22,
									},
									File:   "bigpanda.flux",
									Source: "if lvl == \"warn\" then \"warning\"\n        else if lvl == \"crit\" then \"critical\"\n        else if lvl == \"info\" then \"ok\"\n        else if lvl == \"ok\" then \"ok\"\n        else \"critical\"",
									Start: ast.Position{
										Column: 11,
										Line:   18,
									},
								},
							},
							Consequent: &ast.StringLiteral{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   18,
										},
										File:   "bigpanda.flux",
										Source: "\"warning\"",
										Start: ast.Position{
											Column: 33,
											Line:   18,
										},
									},
								},
								Value: "warning",
							},
							Test: &ast.BinaryExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   18,
										},
										File:   "bigpanda.flux",
										Source: "lvl == \"warn\"",
										Start: ast.Position{
											Column: 14,
											Line:   18,
										},
									},
								},
								Left: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   18,
											},
											File:   "bigpanda.flux",
											Source: "lvl",
											Start: ast.Position{
												Column: 14,
												Line:   18,
											},
										},
									},
									Name: "lvl",
								},
								Operator: 17,
								Right: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   18,
											},
											File:   "bigpanda.flux",
											Source: "\"warn\"",
											Start: ast.Position{
												Column: 21,
												Line:   18,
											},
										},
									},
									Value: "warn",
								},
							},
						},
					}, &ast.ReturnStatement{
						Argument: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 15,
										Line:   23,
									},
									File:   "bigpanda.flux",
									Source: "sev",
									Start: ast.Position{
										Column: 12,
										Line:   23,
									},
								},
							},
							Name: "sev",
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   23,
								},
								File:   "bigpanda.flux",
								Source: "return sev",
								Start: ast.Position{
									Column: 5,
									Line:   23,
								},
							},
						},
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   16,
							},
							File:   "bigpanda.flux",
							Source: "level",
							Start: ast.Position{
								Column: 20,
								Line:   16,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   16,
								},
								File:   "bigpanda.flux",
								Source: "level",
								Start: ast.Position{
									Column: 20,
									Line:   16,
								},
							},
						},
						Name: "level",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   40,
					},
					File:   "bigpanda.flux",
					Source: "sendAlert = (url, token, appKey, status, rec) => {\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\" : defaultTokenPrefix + \" \" + token,\n    }\n    data = {rec with app_key: appKey, status: status}\n    return http.post(headers: headers, url: url, data: json.encode(v:data))\n}",
					Start: ast.Position{
						Column: 1,
						Line:   33,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 10,
							Line:   33,
						},
						File:   "bigpanda.flux",
						Source: "sendAlert",
						Start: ast.Position{
							Column: 1,
							Line:   33,
						},
					},
				},
				Name: "sendAlert",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   40,
						},
						File:   "bigpanda.flux",
						Source: "(url, token, appKey, status, rec) => {\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\" : defaultTokenPrefix + \" \" + token,\n    }\n    data = {rec with app_key: appKey, status: status}\n    return http.post(headers: headers, url: url, data: json.encode(v:data))\n}",
						Start: ast.Position{
							Column: 13,
							Line:   33,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   40,
							},
							File:   "bigpanda.flux",
							Source: "{\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\" : defaultTokenPrefix + \" \" + token,\n    }\n    data = {rec with app_key: appKey, status: status}\n    return http.post(headers: headers, url: url, data: json.encode(v:data))\n}",
							Start: ast.Position{
								Column: 50,
								Line:   33,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   37,
								},
								File:   "bigpanda.flux",
								Source: "headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\" : defaultTokenPrefix + \" \" + token,\n    }",
								Start: ast.Position{
									Column: 5,
									Line:   34,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   34,
									},
									File:   "bigpanda.flux",
									Source: "headers",
									Start: ast.Position{
										Column: 5,
										Line:   34,
									},
								},
							},
							Name: "headers",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   37,
									},
									File:   "bigpanda.flux",
									Source: "{\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\" : defaultTokenPrefix + \" \" + token,\n    }",
									Start: ast.Position{
										Column: 15,
										Line:   34,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 58,
											Line:   35,
										},
										File:   "bigpanda.flux",
										Source: "\"Content-Type\": \"application/json; charset=utf-8\"",
										Start: ast.Position{
											Column: 9,
											Line:   35,
										},
									},
								},
								Key: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   35,
											},
											File:   "bigpanda.flux",
											Source: "\"Content-Type\"",
											Start: ast.Position{
												Column: 9,
												Line:   35,
											},
										},
									},
									Value: "Content-Type",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   35,
											},
											File:   "bigpanda.flux",
											Source: "\"application/json; charset=utf-8\"",
											Start: ast.Position{
												Column: 25,
												Line:   35,
											},
										},
									},
									Value: "application/json; charset=utf-8",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 59,
											Line:   36,
										},
										File:   "bigpanda.flux",
										Source: "\"Authorization\" : defaultTokenPrefix + \" \" + token",
										Start: ast.Position{
											Column: 9,
											Line:   36,
										},
									},
								},
								Key: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 24,
												Line:   36,
											},
											File:   "bigpanda.flux",
											Source: "\"Authorization\"",
											Start: ast.Position{
												Column: 9,
												Line:   36,
											},
										},
									},
									Value: "Authorization",
								},
								Value: &ast.BinaryExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 59,
												Line:   36,
											},
											File:   "bigpanda.flux",
											Source: "defaultTokenPrefix + \" \" + token",
											Start: ast.Position{
												Column: 27,
												Line:   36,
											},
										},
									},
									Left: &ast.BinaryExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   36,
												},
												File:   "bigpanda.flux",
												Source: "defaultTokenPrefix + \" \"",
												Start: ast.Position{
													Column: 27,
													Line:   36,
												},
											},
										},
										Left: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 45,
														Line:   36,
													},
													File:   "bigpanda.flux",
													Source: "defaultTokenPrefix",
													Start: ast.Position{
														Column: 27,
														Line:   36,
													},
												},
											},
											Name: "defaultTokenPrefix",
										},
										Operator: 5,
										Right: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 51,
														Line:   36,
													},
													File:   "bigpanda.flux",
													Source: "\" \"",
													Start: ast.Position{
														Column: 48,
														Line:   36,
													},
												},
											},
											Value: " ",
										},
									},
									Operator: 5,
									Right: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 59,
													Line:   36,
												},
												File:   "bigpanda.flux",
												Source: "token",
												Start: ast.Position{
													Column: 54,
													Line:   36,
												},
											},
										},
										Name: "token",
									},
								},
							}},
							With: nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   38,
								},
								File:   "bigpanda.flux",
								Source: "data = {rec with app_key: appKey, status: status}",
								Start: ast.Position{
									Column: 5,
									Line:   38,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   38,
									},
									File:   "bigpanda.flux",
									Source: "data",
									Start: ast.Position{
										Column: 5,
										Line:   38,
									},
								},
							},
							Name: "data",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 54,
										Line:   38,
									},
									File:   "bigpanda.flux",
									Source: "{rec with app_key: appKey, status: status}",
									Start: ast.Position{
										Column: 12,
										Line:   38,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 37,
											Line:   38,
										},
										File:   "bigpanda.flux",
										Source: "app_key: appKey",
										Start: ast.Position{
											Column: 22,
											Line:   38,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   38,
											},
											File:   "bigpanda.flux",
											Source: "app_key",
											Start: ast.Position{
												Column: 22,
												Line:   38,
											},
										},
									},
									Name: "app_key",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   38,
											},
											File:   "bigpanda.flux",
											Source: "appKey",
											Start: ast.Position{
												Column: 31,
												Line:   38,
											},
										},
									},
									Name: "appKey",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 53,
											Line:   38,
										},
										File:   "bigpanda.flux",
										Source: "status: status",
										Start: ast.Position{
											Column: 39,
											Line:   38,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 45,
												Line:   38,
											},
											File:   "bigpanda.flux",
											Source: "status",
											Start: ast.Position{
												Column: 39,
												Line:   38,
											},
										},
									},
									Name: "status",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   38,
											},
											File:   "bigpanda.flux",
											Source: "status",
											Start: ast.Position{
												Column: 47,
												Line:   38,
											},
										},
									},
									Name: "status",
								},
							}},
							With: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 16,
											Line:   38,
										},
										File:   "bigpanda.flux",
										Source: "rec",
										Start: ast.Position{
											Column: 13,
											Line:   38,
										},
									},
								},
								Name: "rec",
							},
						},
					}, &ast.ReturnStatement{
						Argument: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 75,
											Line:   39,
										},
										File:   "bigpanda.flux",
										Source: "headers: headers, url: url, data: json.encode(v:data)",
										Start: ast.Position{
											Column: 22,
											Line:   39,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 38,
												Line:   39,
											},
											File:   "bigpanda.flux",
											Source: "headers: headers",
											Start: ast.Position{
												Column: 22,
												Line:   39,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   39,
												},
												File:   "bigpanda.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 22,
													Line:   39,
												},
											},
										},
										Name: "headers",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 38,
													Line:   39,
												},
												File:   "bigpanda.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 31,
													Line:   39,
												},
											},
										},
										Name: "headers",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 48,
												Line:   39,
											},
											File:   "bigpanda.flux",
											Source: "url: url",
											Start: ast.Position{
												Column: 40,
												Line:   39,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 43,
													Line:   39,
												},
												File:   "bigpanda.flux",
												Source: "url",
												Start: ast.Position{
													Column: 40,
													Line:   39,
												},
											},
										},
										Name: "url",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 48,
													Line:   39,
												},
												File:   "bigpanda.flux",
												Source: "url",
												Start: ast.Position{
													Column: 45,
													Line:   39,
												},
											},
										},
										Name: "url",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 75,
												Line:   39,
											},
											File:   "bigpanda.flux",
											Source: "data: json.encode(v:data)",
											Start: ast.Position{
												Column: 50,
												Line:   39,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 54,
													Line:   39,
												},
												File:   "bigpanda.flux",
												Source: "data",
												Start: ast.Position{
													Column: 50,
													Line:   39,
												},
											},
										},
										Name: "data",
									},
									Value: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 74,
														Line:   39,
													},
													File:   "bigpanda.flux",
													Source: "v:data",
													Start: ast.Position{
														Column: 68,
														Line:   39,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 74,
															Line:   39,
														},
														File:   "bigpanda.flux",
														Source: "v:data",
														Start: ast.Position{
															Column: 68,
															Line:   39,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 69,
																Line:   39,
															},
															File:   "bigpanda.flux",
															Source: "v",
															Start: ast.Position{
																Column: 68,
																Line:   39,
															},
														},
													},
													Name: "v",
												},
												Value: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 74,
																Line:   39,
															},
															File:   "bigpanda.flux",
															Source: "data",
															Start: ast.Position{
																Column: 70,
																Line:   39,
															},
														},
													},
													Name: "data",
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 75,
													Line:   39,
												},
												File:   "bigpanda.flux",
												Source: "json.encode(v:data)",
												Start: ast.Position{
													Column: 56,
													Line:   39,
												},
											},
										},
										Callee: &ast.MemberExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 67,
														Line:   39,
													},
													File:   "bigpanda.flux",
													Source: "json.encode",
													Start: ast.Position{
														Column: 56,
														Line:   39,
													},
												},
											},
											Object: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 60,
															Line:   39,
														},
														File:   "bigpanda.flux",
														Source: "json",
														Start: ast.Position{
															Column: 56,
															Line:   39,
														},
													},
												},
												Name: "json",
											},
											Property: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 67,
															Line:   39,
														},
														File:   "bigpanda.flux",
														Source: "encode",
														Start: ast.Position{
															Column: 61,
															Line:   39,
														},
													},
												},
												Name: "encode",
											},
										},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 76,
										Line:   39,
									},
									File:   "bigpanda.flux",
									Source: "http.post(headers: headers, url: url, data: json.encode(v:data))",
									Start: ast.Position{
										Column: 12,
										Line:   39,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   39,
										},
										File:   "bigpanda.flux",
										Source: "http.post",
										Start: ast.Position{
											Column: 12,
											Line:   39,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 16,
												Line:   39,
											},
											File:   "bigpanda.flux",
											Source: "http",
											Start: ast.Position{
												Column: 12,
												Line:   39,
											},
										},
									},
									Name: "http",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   39,
											},
											File:   "bigpanda.flux",
											Source: "post",
											Start: ast.Position{
												Column: 17,
												Line:   39,
											},
										},
									},
									Name: "post",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 76,
									Line:   39,
								},
								File:   "bigpanda.flux",
								Source: "return http.post(headers: headers, url: url, data: json.encode(v:data))",
								Start: ast.Position{
									Column: 5,
									Line:   39,
								},
							},
						},
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   33,
							},
							File:   "bigpanda.flux",
							Source: "url",
							Start: ast.Position{
								Column: 14,
								Line:   33,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   33,
								},
								File:   "bigpanda.flux",
								Source: "url",
								Start: ast.Position{
									Column: 14,
									Line:   33,
								},
							},
						},
						Name: "url",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   33,
							},
							File:   "bigpanda.flux",
							Source: "token",
							Start: ast.Position{
								Column: 19,
								Line:   33,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   33,
								},
								File:   "bigpanda.flux",
								Source: "token",
								Start: ast.Position{
									Column: 19,
									Line:   33,
								},
							},
						},
						Name: "token",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 32,
								Line:   33,
							},
							File:   "bigpanda.flux",
							Source: "appKey",
							Start: ast.Position{
								Column: 26,
								Line:   33,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 32,
									Line:   33,
								},
								File:   "bigpanda.flux",
								Source: "appKey",
								Start: ast.Position{
									Column: 26,
									Line:   33,
								},
							},
						},
						Name: "appKey",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   33,
							},
							File:   "bigpanda.flux",
							Source: "status",
							Start: ast.Position{
								Column: 34,
								Line:   33,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   33,
								},
								File:   "bigpanda.flux",
								Source: "status",
								Start: ast.Position{
									Column: 34,
									Line:   33,
								},
							},
						},
						Name: "status",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 45,
								Line:   33,
							},
							File:   "bigpanda.flux",
							Source: "rec",
							Start: ast.Position{
								Column: 42,
								Line:   33,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 45,
									Line:   33,
								},
								File:   "bigpanda.flux",
								Source: "rec",
								Start: ast.Position{
									Column: 42,
									Line:   33,
								},
							},
						},
						Name: "rec",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   60,
					},
					File:   "bigpanda.flux",
					Source: "endpoint = (url=defaultUrl, token, appKey) =>\n    (mapFn) =>\n        (tables=<-) => tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            })",
					Start: ast.Position{
						Column: 1,
						Line:   48,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   48,
						},
						File:   "bigpanda.flux",
						Source: "endpoint",
						Start: ast.Position{
							Column: 1,
							Line:   48,
						},
					},
				},
				Name: "endpoint",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   60,
						},
						File:   "bigpanda.flux",
						Source: "(url=defaultUrl, token, appKey) =>\n    (mapFn) =>\n        (tables=<-) => tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            })",
						Start: ast.Position{
							Column: 12,
							Line:   48,
						},
					},
				},
				Body: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   60,
							},
							File:   "bigpanda.flux",
							Source: "(mapFn) =>\n        (tables=<-) => tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            })",
							Start: ast.Position{
								Column: 5,
								Line:   49,
							},
						},
					},
					Body: &ast.FunctionExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   60,
								},
								File:   "bigpanda.flux",
								Source: "(tables=<-) => tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            })",
								Start: ast.Position{
									Column: 9,
									Line:   50,
								},
							},
						},
						Body: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   50,
										},
										File:   "bigpanda.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 24,
											Line:   50,
										},
									},
								},
								Name: "tables",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 15,
										Line:   60,
									},
									File:   "bigpanda.flux",
									Source: "tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            })",
									Start: ast.Position{
										Column: 24,
										Line:   50,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   60,
											},
											File:   "bigpanda.flux",
											Source: "fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            }",
											Start: ast.Position{
												Column: 20,
												Line:   51,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   60,
												},
												File:   "bigpanda.flux",
												Source: "fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            }",
												Start: ast.Position{
													Column: 20,
													Line:   51,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 22,
														Line:   51,
													},
													File:   "bigpanda.flux",
													Source: "fn",
													Start: ast.Position{
														Column: 20,
														Line:   51,
													},
												},
											},
											Name: "fn",
										},
										Value: &ast.FunctionExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 14,
														Line:   60,
													},
													File:   "bigpanda.flux",
													Source: "(r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            }",
													Start: ast.Position{
														Column: 24,
														Line:   51,
													},
												},
											},
											Body: &ast.Block{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 14,
															Line:   60,
														},
														File:   "bigpanda.flux",
														Source: "{\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            }",
														Start: ast.Position{
															Column: 31,
															Line:   51,
														},
													},
												},
												Body: []ast.Statement{&ast.VariableAssignment{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 34,
																Line:   52,
															},
															File:   "bigpanda.flux",
															Source: "obj = mapFn(r: r)",
															Start: ast.Position{
																Column: 17,
																Line:   52,
															},
														},
													},
													ID: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 20,
																	Line:   52,
																},
																File:   "bigpanda.flux",
																Source: "obj",
																Start: ast.Position{
																	Column: 17,
																	Line:   52,
																},
															},
														},
														Name: "obj",
													},
													Init: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 33,
																		Line:   52,
																	},
																	File:   "bigpanda.flux",
																	Source: "r: r",
																	Start: ast.Position{
																		Column: 29,
																		Line:   52,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 33,
																			Line:   52,
																		},
																		File:   "bigpanda.flux",
																		Source: "r: r",
																		Start: ast.Position{
																			Column: 29,
																			Line:   52,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 30,
																				Line:   52,
																			},
																			File:   "bigpanda.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 29,
																				Line:   52,
																			},
																		},
																	},
																	Name: "r",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 33,
																				Line:   52,
																			},
																			File:   "bigpanda.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 32,
																				Line:   52,
																			},
																		},
																	},
																	Name: "r",
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   52,
																},
																File:   "bigpanda.flux",
																Source: "mapFn(r: r)",
																Start: ast.Position{
																	Column: 23,
																	Line:   52,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 28,
																		Line:   52,
																	},
																	File:   "bigpanda.flux",
																	Source: "mapFn",
																	Start: ast.Position{
																		Column: 23,
																		Line:   52,
																	},
																},
															},
															Name: "mapFn",
														},
													},
												}, &ast.ReturnStatement{
													Argument: &ast.ObjectExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 26,
																	Line:   59,
																},
																File:   "bigpanda.flux",
																Source: "{r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}",
																Start: ast.Position{
																	Column: 24,
																	Line:   53,
																},
															},
														},
														Properties: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 25,
																		Line:   59,
																	},
																	File:   "bigpanda.flux",
																	Source: "_sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)",
																	Start: ast.Position{
																		Column: 32,
																		Line:   53,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 37,
																			Line:   53,
																		},
																		File:   "bigpanda.flux",
																		Source: "_sent",
																		Start: ast.Position{
																			Column: 32,
																			Line:   53,
																		},
																	},
																},
																Name: "_sent",
															},
															Value: &ast.CallExpression{
																Arguments: []ast.Expression{&ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 24,
																				Line:   59,
																			},
																			File:   "bigpanda.flux",
																			Source: "v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100",
																			Start: ast.Position{
																				Column: 46,
																				Line:   53,
																			},
																		},
																	},
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 24,
																					Line:   59,
																				},
																				File:   "bigpanda.flux",
																				Source: "v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100",
																				Start: ast.Position{
																					Column: 46,
																					Line:   53,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 47,
																						Line:   53,
																					},
																					File:   "bigpanda.flux",
																					Source: "v",
																					Start: ast.Position{
																						Column: 46,
																						Line:   53,
																					},
																				},
																			},
																			Name: "v",
																		},
																		Value: &ast.BinaryExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 24,
																						Line:   59,
																					},
																					File:   "bigpanda.flux",
																					Source: "2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100",
																					Start: ast.Position{
																						Column: 49,
																						Line:   53,
																					},
																				},
																			},
																			Left: &ast.IntegerLiteral{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 50,
																							Line:   53,
																						},
																						File:   "bigpanda.flux",
																						Source: "2",
																						Start: ast.Position{
																							Column: 49,
																							Line:   53,
																						},
																					},
																				},
																				Value: int64(2),
																			},
																			Operator: 17,
																			Right: &ast.BinaryExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 24,
																							Line:   59,
																						},
																						File:   "bigpanda.flux",
																						Source: "sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100",
																						Start: ast.Position{
																							Column: 54,
																							Line:   53,
																						},
																					},
																				},
																				Left: &ast.CallExpression{
																					Arguments: []ast.Expression{&ast.ObjectExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 25,
																									Line:   58,
																								},
																								File:   "bigpanda.flux",
																								Source: "url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj",
																								Start: ast.Position{
																									Column: 17,
																									Line:   54,
																								},
																							},
																						},
																						Properties: []*ast.Property{&ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 25,
																										Line:   54,
																									},
																									File:   "bigpanda.flux",
																									Source: "url: url",
																									Start: ast.Position{
																										Column: 17,
																										Line:   54,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 20,
																											Line:   54,
																										},
																										File:   "bigpanda.flux",
																										Source: "url",
																										Start: ast.Position{
																											Column: 17,
																											Line:   54,
																										},
																									},
																								},
																								Name: "url",
																							},
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 25,
																											Line:   54,
																										},
																										File:   "bigpanda.flux",
																										Source: "url",
																										Start: ast.Position{
																											Column: 22,
																											Line:   54,
																										},
																									},
																								},
																								Name: "url",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 31,
																										Line:   55,
																									},
																									File:   "bigpanda.flux",
																									Source: "appKey: appKey",
																									Start: ast.Position{
																										Column: 17,
																										Line:   55,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 23,
																											Line:   55,
																										},
																										File:   "bigpanda.flux",
																										Source: "appKey",
																										Start: ast.Position{
																											Column: 17,
																											Line:   55,
																										},
																									},
																								},
																								Name: "appKey",
																							},
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 31,
																											Line:   55,
																										},
																										File:   "bigpanda.flux",
																										Source: "appKey",
																										Start: ast.Position{
																											Column: 25,
																											Line:   55,
																										},
																									},
																								},
																								Name: "appKey",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 29,
																										Line:   56,
																									},
																									File:   "bigpanda.flux",
																									Source: "token: token",
																									Start: ast.Position{
																										Column: 17,
																										Line:   56,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 22,
																											Line:   56,
																										},
																										File:   "bigpanda.flux",
																										Source: "token",
																										Start: ast.Position{
																											Column: 17,
																											Line:   56,
																										},
																									},
																								},
																								Name: "token",
																							},
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 29,
																											Line:   56,
																										},
																										File:   "bigpanda.flux",
																										Source: "token",
																										Start: ast.Position{
																											Column: 24,
																											Line:   56,
																										},
																									},
																								},
																								Name: "token",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 35,
																										Line:   57,
																									},
																									File:   "bigpanda.flux",
																									Source: "status: obj.status",
																									Start: ast.Position{
																										Column: 17,
																										Line:   57,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 23,
																											Line:   57,
																										},
																										File:   "bigpanda.flux",
																										Source: "status",
																										Start: ast.Position{
																											Column: 17,
																											Line:   57,
																										},
																									},
																								},
																								Name: "status",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 35,
																											Line:   57,
																										},
																										File:   "bigpanda.flux",
																										Source: "obj.status",
																										Start: ast.Position{
																											Column: 25,
																											Line:   57,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 28,
																												Line:   57,
																											},
																											File:   "bigpanda.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 25,
																												Line:   57,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 35,
																												Line:   57,
																											},
																											File:   "bigpanda.flux",
																											Source: "status",
																											Start: ast.Position{
																												Column: 29,
																												Line:   57,
																											},
																										},
																									},
																									Name: "status",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 25,
																										Line:   58,
																									},
																									File:   "bigpanda.flux",
																									Source: "rec: obj",
																									Start: ast.Position{
																										Column: 17,
																										Line:   58,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 20,
																											Line:   58,
																										},
																										File:   "bigpanda.flux",
																										Source: "rec",
																										Start: ast.Position{
																											Column: 17,
																											Line:   58,
																										},
																									},
																								},
																								Name: "rec",
																							},
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 25,
																											Line:   58,
																										},
																										File:   "bigpanda.flux",
																										Source: "obj",
																										Start: ast.Position{
																											Column: 22,
																											Line:   58,
																										},
																									},
																								},
																								Name: "obj",
																							},
																						}},
																						With: nil,
																					}},
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 18,
																								Line:   59,
																							},
																							File:   "bigpanda.flux",
																							Source: "sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                )",
																							Start: ast.Position{
																								Column: 54,
																								Line:   53,
																							},
																						},
																					},
																					Callee: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 63,
																									Line:   53,
																								},
																								File:   "bigpanda.flux",
																								Source: "sendAlert",
																								Start: ast.Position{
																									Column: 54,
																									Line:   53,
																								},
																							},
																						},
																						Name: "sendAlert",
																					},
																				},
																				Operator: 2,
																				Right: &ast.IntegerLiteral{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 24,
																								Line:   59,
																							},
																							File:   "bigpanda.flux",
																							Source: "100",
																							Start: ast.Position{
																								Column: 21,
																								Line:   59,
																							},
																						},
																					},
																					Value: int64(100),
																				},
																			},
																		},
																	}},
																	With: nil,
																}},
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 25,
																			Line:   59,
																		},
																		File:   "bigpanda.flux",
																		Source: "string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)",
																		Start: ast.Position{
																			Column: 39,
																			Line:   53,
																		},
																	},
																},
																Callee: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 45,
																				Line:   53,
																			},
																			File:   "bigpanda.flux",
																			Source: "string",
																			Start: ast.Position{
																				Column: 39,
																				Line:   53,
																			},
																		},
																	},
																	Name: "string",
																},
															},
														}},
														With: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 26,
																		Line:   53,
																	},
																	File:   "bigpanda.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 25,
																		Line:   53,
																	},
																},
															},
															Name: "r",
														},
													},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 26,
																Line:   59,
															},
															File:   "bigpanda.flux",
															Source: "return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}",
															Start: ast.Position{
																Column: 17,
																Line:   53,
															},
														},
													},
												}},
											},
											Params: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 26,
															Line:   51,
														},
														File:   "bigpanda.flux",
														Source: "r",
														Start: ast.Position{
															Column: 25,
															Line:   51,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 26,
																Line:   51,
															},
															File:   "bigpanda.flux",
															Source: "r",
															Start: ast.Position{
																Column: 25,
																Line:   51,
															},
														},
													},
													Name: "r",
												},
												Value: nil,
											}},
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 15,
											Line:   60,
										},
										File:   "bigpanda.flux",
										Source: "map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == sendAlert(\n                url: url,\n                appKey: appKey,\n                token: token,\n                status: obj.status,\n                rec: obj,\n                ) / 100)}\n            })",
										Start: ast.Position{
											Column: 16,
											Line:   51,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   51,
											},
											File:   "bigpanda.flux",
											Source: "map",
											Start: ast.Position{
												Column: 16,
												Line:   51,
											},
										},
									},
									Name: "map",
								},
							},
						},
						Params: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   50,
									},
									File:   "bigpanda.flux",
									Source: "tables=<-",
									Start: ast.Position{
										Column: 10,
										Line:   50,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 16,
											Line:   50,
										},
										File:   "bigpanda.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 10,
											Line:   50,
										},
									},
								},
								Name: "tables",
							},
							Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   50,
									},
									File:   "bigpanda.flux",
									Source: "<-",
									Start: ast.Position{
										Column: 17,
										Line:   50,
									},
								},
							}},
						}},
					},
					Params: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 11,
									Line:   49,
								},
								File:   "bigpanda.flux",
								Source: "mapFn",
								Start: ast.Position{
									Column: 6,
									Line:   49,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   49,
									},
									File:   "bigpanda.flux",
									Source: "mapFn",
									Start: ast.Position{
										Column: 6,
										Line:   49,
									},
								},
							},
							Name: "mapFn",
						},
						Value: nil,
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   48,
							},
							File:   "bigpanda.flux",
							Source: "url=defaultUrl",
							Start: ast.Position{
								Column: 13,
								Line:   48,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   48,
								},
								File:   "bigpanda.flux",
								Source: "url",
								Start: ast.Position{
									Column: 13,
									Line:   48,
								},
							},
						},
						Name: "url",
					},
					Value: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 27,
									Line:   48,
								},
								File:   "bigpanda.flux",
								Source: "defaultUrl",
								Start: ast.Position{
									Column: 17,
									Line:   48,
								},
							},
						},
						Name: "defaultUrl",
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   48,
							},
							File:   "bigpanda.flux",
							Source: "token",
							Start: ast.Position{
								Column: 29,
								Line:   48,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   48,
								},
								File:   "bigpanda.flux",
								Source: "token",
								Start: ast.Position{
									Column: 29,
									Line:   48,
								},
							},
						},
						Name: "token",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   48,
							},
							File:   "bigpanda.flux",
							Source: "appKey",
							Start: ast.Position{
								Column: 36,
								Line:   48,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   48,
								},
								File:   "bigpanda.flux",
								Source: "appKey",
								Start: ast.Position{
									Column: 36,
									Line:   48,
								},
							},
						},
						Name: "appKey",
					},
					Value: nil,
				}},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   3,
					},
					File:   "bigpanda.flux",
					Source: "import \"http\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   3,
						},
						File:   "bigpanda.flux",
						Source: "\"http\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "http",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   4,
					},
					File:   "bigpanda.flux",
					Source: "import \"json\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   4,
						},
						File:   "bigpanda.flux",
						Source: "\"json\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "json",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "bigpanda.flux",
					Source: "import \"strings\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "bigpanda.flux",
						Source: "\"strings\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "strings",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "bigpanda.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "bigpanda.flux",
					Source: "package bigpanda",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "bigpanda.flux",
						Source: "bigpanda",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "bigpanda",
			},
		},
	}},
	Package: "bigpanda",
	Path:    "contrib/rhajek/bigpanda",
}
