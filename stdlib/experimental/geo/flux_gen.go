// DO NOT EDIT: This file is autogenerated via the builtin command.

package geo

import (
	flux "github.com/influxdata/flux"
	ast "github.com/influxdata/flux/ast"
	"regexp"
)

func init() {
	flux.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 30,
					Line:   120,
				},
				File:   "geo.flux",
				Source: "package geo\n\nimport \"strings\"\n\n// Calculates geohash grid for given box and according to options.\nbuiltin getGrid\n\n// Checks for tag presence in a record and its value against a set.\nbuiltin containsTag\n\n// ----------------------------------------\n// Filtering functions\n// ----------------------------------------\n\n// Filters records by geohash tag value (`_g1` ... `_g12`) if exist\n// TODO(?): uses hardcoded schema tag keys and Flux does not provide dynamic access, therefore containsTag() is provided.\ngeohashFilter = (tables=<-, grid) =>\n  tables\n    |> filter(fn: (r) =>\n\t  if grid.precision == 1 and exists r._g1 then contains(value: r._g1, set: grid.set)\n\t  else if grid.precision == 2 and exists r._g2 then contains(value: r._g2, set: grid.set)\n\t  else if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false\n    )\n\n// Filters records by geohash tag value using custom builtin function.\n// TODO(ales.pour@bonitoo.io): benchmark it, seems much faster than geohashFilter()\ngeohashFilterEx = (tables=<-, grid, prefix=\"_g\") =>\n  tables\n    |> filter(fn: (r) =>\n      containsTag(row: r, tagKey: prefix + string(v: grid.precision), set: grid.set)\n    )\n\n// Filters records by lat/lon box. The grid always overlaps specified area and therefore result may contain\n// values outside the box. If precise filtering is needed, `boxFilter()` may be used later (after `toRows()`).\ngridFilter = (tables=<-, fn=geohashFilter, box, minGridSize=9, maxGridSize=-1, geohashPrecision=-1, maxGeohashPrecision=12) => {\n  grid = getGrid(box: box, minSize: minGridSize, maxSize: maxGridSize, precision: geohashPrecision, maxPrecision: maxGeohashPrecision)\n  return\n    tables\n      |> fn(grid: grid)\n}\n\n// Filters records by lat/lon box. Unlike `gridFilter()`, this is a strict filter.\n// Must be used after `toRows()` because it requires `lat` and `lon` columns in input row set(s).\nboxFilter = (tables=<-, box) =>\n  tables\n    |> filter(fn: (r) =>\n      r.lat <= box.maxLat and r.lat >= box.minLat and r.lon <= box.maxLon and r.lon >= box.minLon\n    )\n\n// ----------------------------------------\n// Convenience functions\n// ----------------------------------------\n\n// Collects values to row-wise sets.\ntoRows = (tables=<-, correlationKey=[\"_time\"]) =>\n  tables\n    |> pivot(\n      rowKey: correlationKey,\n      columnKey: [\"_field\"],\n      valueColumn: \"_value\"\n    )\n\n// Drops geohash indexes columns except those specified.\n// It will fail if input tables are grouped by any of them.\nstripMeta = (tables=<-, pattern=/_g\\d+/, except=[]) =>\n  tables\n    |> drop(fn: (column) => column =~ pattern and (length(arr: except) == 0 or not contains(value: column, set: except)))\n\n// ----------------------------------------\n// Grouping functions\n// ----------------------------------------\n// intended to be used row-wise sets (i.e after `toRows()`)\n\n// Grouping levels (based on geohash length/precision) - cell width x height\n//  1 - 5000 x 5000 km\n//  2 - 1250 x 625 km\n//  3 - 156 x 156 km\n//  4 - 39.1 x 19.5 km\n//  5 - 4.89 x 4.89 km\n//  6 - 1.22 x 0.61 km\n//  7 - 153 x 153 m\n//  8 - 38.2 x 19.1 m\n//  9 - 4.77 x 4.77 m\n// 10 - 1.19 x 0.596 m\n// 11 - 149 x 149 mm\n// 12 - 37.2 x 18.6 mm\n\n// Groups rows by area of size specified by geohash precision. Result is grouped by `newColumn`.\n// Parameter `maxPrecisionIndex` specifies finest precision geohash tag available in the input tables.\n// TODO: can maxPrecisionIndex be discovered at Flux level?\ngroupByArea = (tables=<-, newColumn, precision, maxPrecisionIndex, prefix=\"_g\") => {\n  prepared =\n    if precision <= maxPrecisionIndex then\n      tables\n\t    |> duplicate(column: prefix + string(v: precision), as: newColumn)\n    else\n      tables\n        |> map(fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) }))\n\t    |> rename(columns: { _gx: newColumn })\n  return prepared\n    |> group(columns: [newColumn])\n}\n\n// Organizes rows into tracks.\n// It groups input source and track id and orders by time in ascending order.\nasTracks = (tables=<-, groupBy=[\"id\",\"tid\"], orderBy=[\"_time\"]) =>\n  tables\n    |> group(columns: groupBy)\n    |> sort(columns: orderBy)",
				Start: ast.Position{
					Column: 1,
					Line:   2,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 16,
						Line:   7,
					},
					File:   "geo.flux",
					Source: "builtin getGrid",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   7,
						},
						File:   "geo.flux",
						Source: "getGrid",
						Start: ast.Position{
							Column: 9,
							Line:   7,
						},
					},
				},
				Name: "getGrid",
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 20,
						Line:   10,
					},
					File:   "geo.flux",
					Source: "builtin containsTag",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   10,
						},
						File:   "geo.flux",
						Source: "containsTag",
						Start: ast.Position{
							Column: 9,
							Line:   10,
						},
					},
				},
				Name: "containsTag",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 6,
						Line:   34,
					},
					File:   "geo.flux",
					Source: "geohashFilter = (tables=<-, grid) =>\n  tables\n    |> filter(fn: (r) =>\n\t  if grid.precision == 1 and exists r._g1 then contains(value: r._g1, set: grid.set)\n\t  else if grid.precision == 2 and exists r._g2 then contains(value: r._g2, set: grid.set)\n\t  else if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false\n    )",
					Start: ast.Position{
						Column: 1,
						Line:   18,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   18,
						},
						File:   "geo.flux",
						Source: "geohashFilter",
						Start: ast.Position{
							Column: 1,
							Line:   18,
						},
					},
				},
				Name: "geohashFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   34,
						},
						File:   "geo.flux",
						Source: "(tables=<-, grid) =>\n  tables\n    |> filter(fn: (r) =>\n\t  if grid.precision == 1 and exists r._g1 then contains(value: r._g1, set: grid.set)\n\t  else if grid.precision == 2 and exists r._g2 then contains(value: r._g2, set: grid.set)\n\t  else if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false\n    )",
						Start: ast.Position{
							Column: 17,
							Line:   18,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 9,
									Line:   19,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 3,
									Line:   19,
								},
							},
						},
						Name: "tables",
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 6,
								Line:   34,
							},
							File:   "geo.flux",
							Source: "tables\n    |> filter(fn: (r) =>\n\t  if grid.precision == 1 and exists r._g1 then contains(value: r._g1, set: grid.set)\n\t  else if grid.precision == 2 and exists r._g2 then contains(value: r._g2, set: grid.set)\n\t  else if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false\n    )",
							Start: ast.Position{
								Column: 3,
								Line:   19,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 14,
										Line:   33,
									},
									File:   "geo.flux",
									Source: "fn: (r) =>\n\t  if grid.precision == 1 and exists r._g1 then contains(value: r._g1, set: grid.set)\n\t  else if grid.precision == 2 and exists r._g2 then contains(value: r._g2, set: grid.set)\n\t  else if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
									Start: ast.Position{
										Column: 15,
										Line:   20,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   33,
										},
										File:   "geo.flux",
										Source: "fn: (r) =>\n\t  if grid.precision == 1 and exists r._g1 then contains(value: r._g1, set: grid.set)\n\t  else if grid.precision == 2 and exists r._g2 then contains(value: r._g2, set: grid.set)\n\t  else if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
										Start: ast.Position{
											Column: 15,
											Line:   20,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   20,
											},
											File:   "geo.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 15,
												Line:   20,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.FunctionExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   33,
											},
											File:   "geo.flux",
											Source: "(r) =>\n\t  if grid.precision == 1 and exists r._g1 then contains(value: r._g1, set: grid.set)\n\t  else if grid.precision == 2 and exists r._g2 then contains(value: r._g2, set: grid.set)\n\t  else if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
											Start: ast.Position{
												Column: 19,
												Line:   20,
											},
										},
									},
									Body: &ast.ConditionalExpression{
										Alternate: &ast.ConditionalExpression{
											Alternate: &ast.ConditionalExpression{
												Alternate: &ast.ConditionalExpression{
													Alternate: &ast.ConditionalExpression{
														Alternate: &ast.ConditionalExpression{
															Alternate: &ast.ConditionalExpression{
																Alternate: &ast.ConditionalExpression{
																	Alternate: &ast.ConditionalExpression{
																		Alternate: &ast.ConditionalExpression{
																			Alternate: &ast.ConditionalExpression{
																				Alternate: &ast.ConditionalExpression{
																					Alternate: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 14,
																									Line:   33,
																								},
																								File:   "geo.flux",
																								Source: "false",
																								Start: ast.Position{
																									Column: 9,
																									Line:   33,
																								},
																							},
																						},
																						Name: "false",
																					},
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 14,
																								Line:   33,
																							},
																							File:   "geo.flux",
																							Source: "if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
																							Start: ast.Position{
																								Column: 9,
																								Line:   32,
																							},
																						},
																					},
																					Consequent: &ast.CallExpression{
																						Arguments: []ast.Expression{&ast.ObjectExpression{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 93,
																										Line:   32,
																									},
																									File:   "geo.flux",
																									Source: "value: r._g12, set: grid.set",
																									Start: ast.Position{
																										Column: 65,
																										Line:   32,
																									},
																								},
																							},
																							Properties: []*ast.Property{&ast.Property{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 78,
																											Line:   32,
																										},
																										File:   "geo.flux",
																										Source: "value: r._g12",
																										Start: ast.Position{
																											Column: 65,
																											Line:   32,
																										},
																									},
																								},
																								Key: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 70,
																												Line:   32,
																											},
																											File:   "geo.flux",
																											Source: "value",
																											Start: ast.Position{
																												Column: 65,
																												Line:   32,
																											},
																										},
																									},
																									Name: "value",
																								},
																								Value: &ast.MemberExpression{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 78,
																												Line:   32,
																											},
																											File:   "geo.flux",
																											Source: "r._g12",
																											Start: ast.Position{
																												Column: 72,
																												Line:   32,
																											},
																										},
																									},
																									Object: &ast.Identifier{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 73,
																													Line:   32,
																												},
																												File:   "geo.flux",
																												Source: "r",
																												Start: ast.Position{
																													Column: 72,
																													Line:   32,
																												},
																											},
																										},
																										Name: "r",
																									},
																									Property: &ast.Identifier{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 78,
																													Line:   32,
																												},
																												File:   "geo.flux",
																												Source: "_g12",
																												Start: ast.Position{
																													Column: 74,
																													Line:   32,
																												},
																											},
																										},
																										Name: "_g12",
																									},
																								},
																							}, &ast.Property{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 93,
																											Line:   32,
																										},
																										File:   "geo.flux",
																										Source: "set: grid.set",
																										Start: ast.Position{
																											Column: 80,
																											Line:   32,
																										},
																									},
																								},
																								Key: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 83,
																												Line:   32,
																											},
																											File:   "geo.flux",
																											Source: "set",
																											Start: ast.Position{
																												Column: 80,
																												Line:   32,
																											},
																										},
																									},
																									Name: "set",
																								},
																								Value: &ast.MemberExpression{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 93,
																												Line:   32,
																											},
																											File:   "geo.flux",
																											Source: "grid.set",
																											Start: ast.Position{
																												Column: 85,
																												Line:   32,
																											},
																										},
																									},
																									Object: &ast.Identifier{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 89,
																													Line:   32,
																												},
																												File:   "geo.flux",
																												Source: "grid",
																												Start: ast.Position{
																													Column: 85,
																													Line:   32,
																												},
																											},
																										},
																										Name: "grid",
																									},
																									Property: &ast.Identifier{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 93,
																													Line:   32,
																												},
																												File:   "geo.flux",
																												Source: "set",
																												Start: ast.Position{
																													Column: 90,
																													Line:   32,
																												},
																											},
																										},
																										Name: "set",
																									},
																								},
																							}},
																							With: nil,
																						}},
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 94,
																									Line:   32,
																								},
																								File:   "geo.flux",
																								Source: "contains(value: r._g12, set: grid.set)",
																								Start: ast.Position{
																									Column: 56,
																									Line:   32,
																								},
																							},
																						},
																						Callee: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 64,
																										Line:   32,
																									},
																									File:   "geo.flux",
																									Source: "contains",
																									Start: ast.Position{
																										Column: 56,
																										Line:   32,
																									},
																								},
																							},
																							Name: "contains",
																						},
																					},
																					Test: &ast.LogicalExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 50,
																									Line:   32,
																								},
																								File:   "geo.flux",
																								Source: "grid.precision == 12 and exists r._g12",
																								Start: ast.Position{
																									Column: 12,
																									Line:   32,
																								},
																							},
																						},
																						Left: &ast.BinaryExpression{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 32,
																										Line:   32,
																									},
																									File:   "geo.flux",
																									Source: "grid.precision == 12",
																									Start: ast.Position{
																										Column: 12,
																										Line:   32,
																									},
																								},
																							},
																							Left: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 26,
																											Line:   32,
																										},
																										File:   "geo.flux",
																										Source: "grid.precision",
																										Start: ast.Position{
																											Column: 12,
																											Line:   32,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 16,
																												Line:   32,
																											},
																											File:   "geo.flux",
																											Source: "grid",
																											Start: ast.Position{
																												Column: 12,
																												Line:   32,
																											},
																										},
																									},
																									Name: "grid",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 26,
																												Line:   32,
																											},
																											File:   "geo.flux",
																											Source: "precision",
																											Start: ast.Position{
																												Column: 17,
																												Line:   32,
																											},
																										},
																									},
																									Name: "precision",
																								},
																							},
																							Operator: 17,
																							Right: &ast.IntegerLiteral{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 32,
																											Line:   32,
																										},
																										File:   "geo.flux",
																										Source: "12",
																										Start: ast.Position{
																											Column: 30,
																											Line:   32,
																										},
																									},
																								},
																								Value: int64(12),
																							},
																						},
																						Operator: 1,
																						Right: &ast.UnaryExpression{
																							Argument: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 50,
																											Line:   32,
																										},
																										File:   "geo.flux",
																										Source: "r._g12",
																										Start: ast.Position{
																											Column: 44,
																											Line:   32,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 45,
																												Line:   32,
																											},
																											File:   "geo.flux",
																											Source: "r",
																											Start: ast.Position{
																												Column: 44,
																												Line:   32,
																											},
																										},
																									},
																									Name: "r",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 50,
																												Line:   32,
																											},
																											File:   "geo.flux",
																											Source: "_g12",
																											Start: ast.Position{
																												Column: 46,
																												Line:   32,
																											},
																										},
																									},
																									Name: "_g12",
																								},
																							},
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 50,
																										Line:   32,
																									},
																									File:   "geo.flux",
																									Source: "exists r._g12",
																									Start: ast.Position{
																										Column: 37,
																										Line:   32,
																									},
																								},
																							},
																							Operator: 14,
																						},
																					},
																				},
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 14,
																							Line:   33,
																						},
																						File:   "geo.flux",
																						Source: "if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
																						Start: ast.Position{
																							Column: 9,
																							Line:   31,
																						},
																					},
																				},
																				Consequent: &ast.CallExpression{
																					Arguments: []ast.Expression{&ast.ObjectExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 93,
																									Line:   31,
																								},
																								File:   "geo.flux",
																								Source: "value: r._g11, set: grid.set",
																								Start: ast.Position{
																									Column: 65,
																									Line:   31,
																								},
																							},
																						},
																						Properties: []*ast.Property{&ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 78,
																										Line:   31,
																									},
																									File:   "geo.flux",
																									Source: "value: r._g11",
																									Start: ast.Position{
																										Column: 65,
																										Line:   31,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 70,
																											Line:   31,
																										},
																										File:   "geo.flux",
																										Source: "value",
																										Start: ast.Position{
																											Column: 65,
																											Line:   31,
																										},
																									},
																								},
																								Name: "value",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 78,
																											Line:   31,
																										},
																										File:   "geo.flux",
																										Source: "r._g11",
																										Start: ast.Position{
																											Column: 72,
																											Line:   31,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 73,
																												Line:   31,
																											},
																											File:   "geo.flux",
																											Source: "r",
																											Start: ast.Position{
																												Column: 72,
																												Line:   31,
																											},
																										},
																									},
																									Name: "r",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 78,
																												Line:   31,
																											},
																											File:   "geo.flux",
																											Source: "_g11",
																											Start: ast.Position{
																												Column: 74,
																												Line:   31,
																											},
																										},
																									},
																									Name: "_g11",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 93,
																										Line:   31,
																									},
																									File:   "geo.flux",
																									Source: "set: grid.set",
																									Start: ast.Position{
																										Column: 80,
																										Line:   31,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 83,
																											Line:   31,
																										},
																										File:   "geo.flux",
																										Source: "set",
																										Start: ast.Position{
																											Column: 80,
																											Line:   31,
																										},
																									},
																								},
																								Name: "set",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 93,
																											Line:   31,
																										},
																										File:   "geo.flux",
																										Source: "grid.set",
																										Start: ast.Position{
																											Column: 85,
																											Line:   31,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 89,
																												Line:   31,
																											},
																											File:   "geo.flux",
																											Source: "grid",
																											Start: ast.Position{
																												Column: 85,
																												Line:   31,
																											},
																										},
																									},
																									Name: "grid",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 93,
																												Line:   31,
																											},
																											File:   "geo.flux",
																											Source: "set",
																											Start: ast.Position{
																												Column: 90,
																												Line:   31,
																											},
																										},
																									},
																									Name: "set",
																								},
																							},
																						}},
																						With: nil,
																					}},
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 94,
																								Line:   31,
																							},
																							File:   "geo.flux",
																							Source: "contains(value: r._g11, set: grid.set)",
																							Start: ast.Position{
																								Column: 56,
																								Line:   31,
																							},
																						},
																					},
																					Callee: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 64,
																									Line:   31,
																								},
																								File:   "geo.flux",
																								Source: "contains",
																								Start: ast.Position{
																									Column: 56,
																									Line:   31,
																								},
																							},
																						},
																						Name: "contains",
																					},
																				},
																				Test: &ast.LogicalExpression{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 50,
																								Line:   31,
																							},
																							File:   "geo.flux",
																							Source: "grid.precision == 11 and exists r._g11",
																							Start: ast.Position{
																								Column: 12,
																								Line:   31,
																							},
																						},
																					},
																					Left: &ast.BinaryExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 32,
																									Line:   31,
																								},
																								File:   "geo.flux",
																								Source: "grid.precision == 11",
																								Start: ast.Position{
																									Column: 12,
																									Line:   31,
																								},
																							},
																						},
																						Left: &ast.MemberExpression{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 26,
																										Line:   31,
																									},
																									File:   "geo.flux",
																									Source: "grid.precision",
																									Start: ast.Position{
																										Column: 12,
																										Line:   31,
																									},
																								},
																							},
																							Object: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 16,
																											Line:   31,
																										},
																										File:   "geo.flux",
																										Source: "grid",
																										Start: ast.Position{
																											Column: 12,
																											Line:   31,
																										},
																									},
																								},
																								Name: "grid",
																							},
																							Property: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 26,
																											Line:   31,
																										},
																										File:   "geo.flux",
																										Source: "precision",
																										Start: ast.Position{
																											Column: 17,
																											Line:   31,
																										},
																									},
																								},
																								Name: "precision",
																							},
																						},
																						Operator: 17,
																						Right: &ast.IntegerLiteral{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 32,
																										Line:   31,
																									},
																									File:   "geo.flux",
																									Source: "11",
																									Start: ast.Position{
																										Column: 30,
																										Line:   31,
																									},
																								},
																							},
																							Value: int64(11),
																						},
																					},
																					Operator: 1,
																					Right: &ast.UnaryExpression{
																						Argument: &ast.MemberExpression{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 50,
																										Line:   31,
																									},
																									File:   "geo.flux",
																									Source: "r._g11",
																									Start: ast.Position{
																										Column: 44,
																										Line:   31,
																									},
																								},
																							},
																							Object: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 45,
																											Line:   31,
																										},
																										File:   "geo.flux",
																										Source: "r",
																										Start: ast.Position{
																											Column: 44,
																											Line:   31,
																										},
																									},
																								},
																								Name: "r",
																							},
																							Property: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 50,
																											Line:   31,
																										},
																										File:   "geo.flux",
																										Source: "_g11",
																										Start: ast.Position{
																											Column: 46,
																											Line:   31,
																										},
																									},
																								},
																								Name: "_g11",
																							},
																						},
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 50,
																									Line:   31,
																								},
																								File:   "geo.flux",
																								Source: "exists r._g11",
																								Start: ast.Position{
																									Column: 37,
																									Line:   31,
																								},
																							},
																						},
																						Operator: 14,
																					},
																				},
																			},
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 14,
																						Line:   33,
																					},
																					File:   "geo.flux",
																					Source: "if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
																					Start: ast.Position{
																						Column: 9,
																						Line:   30,
																					},
																				},
																			},
																			Consequent: &ast.CallExpression{
																				Arguments: []ast.Expression{&ast.ObjectExpression{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 93,
																								Line:   30,
																							},
																							File:   "geo.flux",
																							Source: "value: r._g10, set: grid.set",
																							Start: ast.Position{
																								Column: 65,
																								Line:   30,
																							},
																						},
																					},
																					Properties: []*ast.Property{&ast.Property{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 78,
																									Line:   30,
																								},
																								File:   "geo.flux",
																								Source: "value: r._g10",
																								Start: ast.Position{
																									Column: 65,
																									Line:   30,
																								},
																							},
																						},
																						Key: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 70,
																										Line:   30,
																									},
																									File:   "geo.flux",
																									Source: "value",
																									Start: ast.Position{
																										Column: 65,
																										Line:   30,
																									},
																								},
																							},
																							Name: "value",
																						},
																						Value: &ast.MemberExpression{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 78,
																										Line:   30,
																									},
																									File:   "geo.flux",
																									Source: "r._g10",
																									Start: ast.Position{
																										Column: 72,
																										Line:   30,
																									},
																								},
																							},
																							Object: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 73,
																											Line:   30,
																										},
																										File:   "geo.flux",
																										Source: "r",
																										Start: ast.Position{
																											Column: 72,
																											Line:   30,
																										},
																									},
																								},
																								Name: "r",
																							},
																							Property: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 78,
																											Line:   30,
																										},
																										File:   "geo.flux",
																										Source: "_g10",
																										Start: ast.Position{
																											Column: 74,
																											Line:   30,
																										},
																									},
																								},
																								Name: "_g10",
																							},
																						},
																					}, &ast.Property{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 93,
																									Line:   30,
																								},
																								File:   "geo.flux",
																								Source: "set: grid.set",
																								Start: ast.Position{
																									Column: 80,
																									Line:   30,
																								},
																							},
																						},
																						Key: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 83,
																										Line:   30,
																									},
																									File:   "geo.flux",
																									Source: "set",
																									Start: ast.Position{
																										Column: 80,
																										Line:   30,
																									},
																								},
																							},
																							Name: "set",
																						},
																						Value: &ast.MemberExpression{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 93,
																										Line:   30,
																									},
																									File:   "geo.flux",
																									Source: "grid.set",
																									Start: ast.Position{
																										Column: 85,
																										Line:   30,
																									},
																								},
																							},
																							Object: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 89,
																											Line:   30,
																										},
																										File:   "geo.flux",
																										Source: "grid",
																										Start: ast.Position{
																											Column: 85,
																											Line:   30,
																										},
																									},
																								},
																								Name: "grid",
																							},
																							Property: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 93,
																											Line:   30,
																										},
																										File:   "geo.flux",
																										Source: "set",
																										Start: ast.Position{
																											Column: 90,
																											Line:   30,
																										},
																									},
																								},
																								Name: "set",
																							},
																						},
																					}},
																					With: nil,
																				}},
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 94,
																							Line:   30,
																						},
																						File:   "geo.flux",
																						Source: "contains(value: r._g10, set: grid.set)",
																						Start: ast.Position{
																							Column: 56,
																							Line:   30,
																						},
																					},
																				},
																				Callee: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 64,
																								Line:   30,
																							},
																							File:   "geo.flux",
																							Source: "contains",
																							Start: ast.Position{
																								Column: 56,
																								Line:   30,
																							},
																						},
																					},
																					Name: "contains",
																				},
																			},
																			Test: &ast.LogicalExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 50,
																							Line:   30,
																						},
																						File:   "geo.flux",
																						Source: "grid.precision == 10 and exists r._g10",
																						Start: ast.Position{
																							Column: 12,
																							Line:   30,
																						},
																					},
																				},
																				Left: &ast.BinaryExpression{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 32,
																								Line:   30,
																							},
																							File:   "geo.flux",
																							Source: "grid.precision == 10",
																							Start: ast.Position{
																								Column: 12,
																								Line:   30,
																							},
																						},
																					},
																					Left: &ast.MemberExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 26,
																									Line:   30,
																								},
																								File:   "geo.flux",
																								Source: "grid.precision",
																								Start: ast.Position{
																									Column: 12,
																									Line:   30,
																								},
																							},
																						},
																						Object: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 16,
																										Line:   30,
																									},
																									File:   "geo.flux",
																									Source: "grid",
																									Start: ast.Position{
																										Column: 12,
																										Line:   30,
																									},
																								},
																							},
																							Name: "grid",
																						},
																						Property: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 26,
																										Line:   30,
																									},
																									File:   "geo.flux",
																									Source: "precision",
																									Start: ast.Position{
																										Column: 17,
																										Line:   30,
																									},
																								},
																							},
																							Name: "precision",
																						},
																					},
																					Operator: 17,
																					Right: &ast.IntegerLiteral{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 32,
																									Line:   30,
																								},
																								File:   "geo.flux",
																								Source: "10",
																								Start: ast.Position{
																									Column: 30,
																									Line:   30,
																								},
																							},
																						},
																						Value: int64(10),
																					},
																				},
																				Operator: 1,
																				Right: &ast.UnaryExpression{
																					Argument: &ast.MemberExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 50,
																									Line:   30,
																								},
																								File:   "geo.flux",
																								Source: "r._g10",
																								Start: ast.Position{
																									Column: 44,
																									Line:   30,
																								},
																							},
																						},
																						Object: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 45,
																										Line:   30,
																									},
																									File:   "geo.flux",
																									Source: "r",
																									Start: ast.Position{
																										Column: 44,
																										Line:   30,
																									},
																								},
																							},
																							Name: "r",
																						},
																						Property: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 50,
																										Line:   30,
																									},
																									File:   "geo.flux",
																									Source: "_g10",
																									Start: ast.Position{
																										Column: 46,
																										Line:   30,
																									},
																								},
																							},
																							Name: "_g10",
																						},
																					},
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 50,
																								Line:   30,
																							},
																							File:   "geo.flux",
																							Source: "exists r._g10",
																							Start: ast.Position{
																								Column: 37,
																								Line:   30,
																							},
																						},
																					},
																					Operator: 14,
																				},
																			},
																		},
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 14,
																					Line:   33,
																				},
																				File:   "geo.flux",
																				Source: "if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
																				Start: ast.Position{
																					Column: 9,
																					Line:   29,
																				},
																			},
																		},
																		Consequent: &ast.CallExpression{
																			Arguments: []ast.Expression{&ast.ObjectExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 90,
																							Line:   29,
																						},
																						File:   "geo.flux",
																						Source: "value: r._g9, set: grid.set",
																						Start: ast.Position{
																							Column: 63,
																							Line:   29,
																						},
																					},
																				},
																				Properties: []*ast.Property{&ast.Property{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 75,
																								Line:   29,
																							},
																							File:   "geo.flux",
																							Source: "value: r._g9",
																							Start: ast.Position{
																								Column: 63,
																								Line:   29,
																							},
																						},
																					},
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 68,
																									Line:   29,
																								},
																								File:   "geo.flux",
																								Source: "value",
																								Start: ast.Position{
																									Column: 63,
																									Line:   29,
																								},
																							},
																						},
																						Name: "value",
																					},
																					Value: &ast.MemberExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 75,
																									Line:   29,
																								},
																								File:   "geo.flux",
																								Source: "r._g9",
																								Start: ast.Position{
																									Column: 70,
																									Line:   29,
																								},
																							},
																						},
																						Object: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 71,
																										Line:   29,
																									},
																									File:   "geo.flux",
																									Source: "r",
																									Start: ast.Position{
																										Column: 70,
																										Line:   29,
																									},
																								},
																							},
																							Name: "r",
																						},
																						Property: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 75,
																										Line:   29,
																									},
																									File:   "geo.flux",
																									Source: "_g9",
																									Start: ast.Position{
																										Column: 72,
																										Line:   29,
																									},
																								},
																							},
																							Name: "_g9",
																						},
																					},
																				}, &ast.Property{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 90,
																								Line:   29,
																							},
																							File:   "geo.flux",
																							Source: "set: grid.set",
																							Start: ast.Position{
																								Column: 77,
																								Line:   29,
																							},
																						},
																					},
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 80,
																									Line:   29,
																								},
																								File:   "geo.flux",
																								Source: "set",
																								Start: ast.Position{
																									Column: 77,
																									Line:   29,
																								},
																							},
																						},
																						Name: "set",
																					},
																					Value: &ast.MemberExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 90,
																									Line:   29,
																								},
																								File:   "geo.flux",
																								Source: "grid.set",
																								Start: ast.Position{
																									Column: 82,
																									Line:   29,
																								},
																							},
																						},
																						Object: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 86,
																										Line:   29,
																									},
																									File:   "geo.flux",
																									Source: "grid",
																									Start: ast.Position{
																										Column: 82,
																										Line:   29,
																									},
																								},
																							},
																							Name: "grid",
																						},
																						Property: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 90,
																										Line:   29,
																									},
																									File:   "geo.flux",
																									Source: "set",
																									Start: ast.Position{
																										Column: 87,
																										Line:   29,
																									},
																								},
																							},
																							Name: "set",
																						},
																					},
																				}},
																				With: nil,
																			}},
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 91,
																						Line:   29,
																					},
																					File:   "geo.flux",
																					Source: "contains(value: r._g9, set: grid.set)",
																					Start: ast.Position{
																						Column: 54,
																						Line:   29,
																					},
																				},
																			},
																			Callee: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 62,
																							Line:   29,
																						},
																						File:   "geo.flux",
																						Source: "contains",
																						Start: ast.Position{
																							Column: 54,
																							Line:   29,
																						},
																					},
																				},
																				Name: "contains",
																			},
																		},
																		Test: &ast.LogicalExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 48,
																						Line:   29,
																					},
																					File:   "geo.flux",
																					Source: "grid.precision == 9 and exists r._g9",
																					Start: ast.Position{
																						Column: 12,
																						Line:   29,
																					},
																				},
																			},
																			Left: &ast.BinaryExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 31,
																							Line:   29,
																						},
																						File:   "geo.flux",
																						Source: "grid.precision == 9",
																						Start: ast.Position{
																							Column: 12,
																							Line:   29,
																						},
																					},
																				},
																				Left: &ast.MemberExpression{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 26,
																								Line:   29,
																							},
																							File:   "geo.flux",
																							Source: "grid.precision",
																							Start: ast.Position{
																								Column: 12,
																								Line:   29,
																							},
																						},
																					},
																					Object: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 16,
																									Line:   29,
																								},
																								File:   "geo.flux",
																								Source: "grid",
																								Start: ast.Position{
																									Column: 12,
																									Line:   29,
																								},
																							},
																						},
																						Name: "grid",
																					},
																					Property: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 26,
																									Line:   29,
																								},
																								File:   "geo.flux",
																								Source: "precision",
																								Start: ast.Position{
																									Column: 17,
																									Line:   29,
																								},
																							},
																						},
																						Name: "precision",
																					},
																				},
																				Operator: 17,
																				Right: &ast.IntegerLiteral{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 31,
																								Line:   29,
																							},
																							File:   "geo.flux",
																							Source: "9",
																							Start: ast.Position{
																								Column: 30,
																								Line:   29,
																							},
																						},
																					},
																					Value: int64(9),
																				},
																			},
																			Operator: 1,
																			Right: &ast.UnaryExpression{
																				Argument: &ast.MemberExpression{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 48,
																								Line:   29,
																							},
																							File:   "geo.flux",
																							Source: "r._g9",
																							Start: ast.Position{
																								Column: 43,
																								Line:   29,
																							},
																						},
																					},
																					Object: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 44,
																									Line:   29,
																								},
																								File:   "geo.flux",
																								Source: "r",
																								Start: ast.Position{
																									Column: 43,
																									Line:   29,
																								},
																							},
																						},
																						Name: "r",
																					},
																					Property: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 48,
																									Line:   29,
																								},
																								File:   "geo.flux",
																								Source: "_g9",
																								Start: ast.Position{
																									Column: 45,
																									Line:   29,
																								},
																							},
																						},
																						Name: "_g9",
																					},
																				},
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 48,
																							Line:   29,
																						},
																						File:   "geo.flux",
																						Source: "exists r._g9",
																						Start: ast.Position{
																							Column: 36,
																							Line:   29,
																						},
																					},
																				},
																				Operator: 14,
																			},
																		},
																	},
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 14,
																				Line:   33,
																			},
																			File:   "geo.flux",
																			Source: "if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
																			Start: ast.Position{
																				Column: 9,
																				Line:   28,
																			},
																		},
																	},
																	Consequent: &ast.CallExpression{
																		Arguments: []ast.Expression{&ast.ObjectExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 90,
																						Line:   28,
																					},
																					File:   "geo.flux",
																					Source: "value: r._g8, set: grid.set",
																					Start: ast.Position{
																						Column: 63,
																						Line:   28,
																					},
																				},
																			},
																			Properties: []*ast.Property{&ast.Property{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 75,
																							Line:   28,
																						},
																						File:   "geo.flux",
																						Source: "value: r._g8",
																						Start: ast.Position{
																							Column: 63,
																							Line:   28,
																						},
																					},
																				},
																				Key: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 68,
																								Line:   28,
																							},
																							File:   "geo.flux",
																							Source: "value",
																							Start: ast.Position{
																								Column: 63,
																								Line:   28,
																							},
																						},
																					},
																					Name: "value",
																				},
																				Value: &ast.MemberExpression{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 75,
																								Line:   28,
																							},
																							File:   "geo.flux",
																							Source: "r._g8",
																							Start: ast.Position{
																								Column: 70,
																								Line:   28,
																							},
																						},
																					},
																					Object: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 71,
																									Line:   28,
																								},
																								File:   "geo.flux",
																								Source: "r",
																								Start: ast.Position{
																									Column: 70,
																									Line:   28,
																								},
																							},
																						},
																						Name: "r",
																					},
																					Property: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 75,
																									Line:   28,
																								},
																								File:   "geo.flux",
																								Source: "_g8",
																								Start: ast.Position{
																									Column: 72,
																									Line:   28,
																								},
																							},
																						},
																						Name: "_g8",
																					},
																				},
																			}, &ast.Property{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 90,
																							Line:   28,
																						},
																						File:   "geo.flux",
																						Source: "set: grid.set",
																						Start: ast.Position{
																							Column: 77,
																							Line:   28,
																						},
																					},
																				},
																				Key: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 80,
																								Line:   28,
																							},
																							File:   "geo.flux",
																							Source: "set",
																							Start: ast.Position{
																								Column: 77,
																								Line:   28,
																							},
																						},
																					},
																					Name: "set",
																				},
																				Value: &ast.MemberExpression{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 90,
																								Line:   28,
																							},
																							File:   "geo.flux",
																							Source: "grid.set",
																							Start: ast.Position{
																								Column: 82,
																								Line:   28,
																							},
																						},
																					},
																					Object: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 86,
																									Line:   28,
																								},
																								File:   "geo.flux",
																								Source: "grid",
																								Start: ast.Position{
																									Column: 82,
																									Line:   28,
																								},
																							},
																						},
																						Name: "grid",
																					},
																					Property: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 90,
																									Line:   28,
																								},
																								File:   "geo.flux",
																								Source: "set",
																								Start: ast.Position{
																									Column: 87,
																									Line:   28,
																								},
																							},
																						},
																						Name: "set",
																					},
																				},
																			}},
																			With: nil,
																		}},
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 91,
																					Line:   28,
																				},
																				File:   "geo.flux",
																				Source: "contains(value: r._g8, set: grid.set)",
																				Start: ast.Position{
																					Column: 54,
																					Line:   28,
																				},
																			},
																		},
																		Callee: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 62,
																						Line:   28,
																					},
																					File:   "geo.flux",
																					Source: "contains",
																					Start: ast.Position{
																						Column: 54,
																						Line:   28,
																					},
																				},
																			},
																			Name: "contains",
																		},
																	},
																	Test: &ast.LogicalExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 48,
																					Line:   28,
																				},
																				File:   "geo.flux",
																				Source: "grid.precision == 8 and exists r._g8",
																				Start: ast.Position{
																					Column: 12,
																					Line:   28,
																				},
																			},
																		},
																		Left: &ast.BinaryExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 31,
																						Line:   28,
																					},
																					File:   "geo.flux",
																					Source: "grid.precision == 8",
																					Start: ast.Position{
																						Column: 12,
																						Line:   28,
																					},
																				},
																			},
																			Left: &ast.MemberExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 26,
																							Line:   28,
																						},
																						File:   "geo.flux",
																						Source: "grid.precision",
																						Start: ast.Position{
																							Column: 12,
																							Line:   28,
																						},
																					},
																				},
																				Object: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 16,
																								Line:   28,
																							},
																							File:   "geo.flux",
																							Source: "grid",
																							Start: ast.Position{
																								Column: 12,
																								Line:   28,
																							},
																						},
																					},
																					Name: "grid",
																				},
																				Property: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 26,
																								Line:   28,
																							},
																							File:   "geo.flux",
																							Source: "precision",
																							Start: ast.Position{
																								Column: 17,
																								Line:   28,
																							},
																						},
																					},
																					Name: "precision",
																				},
																			},
																			Operator: 17,
																			Right: &ast.IntegerLiteral{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 31,
																							Line:   28,
																						},
																						File:   "geo.flux",
																						Source: "8",
																						Start: ast.Position{
																							Column: 30,
																							Line:   28,
																						},
																					},
																				},
																				Value: int64(8),
																			},
																		},
																		Operator: 1,
																		Right: &ast.UnaryExpression{
																			Argument: &ast.MemberExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 48,
																							Line:   28,
																						},
																						File:   "geo.flux",
																						Source: "r._g8",
																						Start: ast.Position{
																							Column: 43,
																							Line:   28,
																						},
																					},
																				},
																				Object: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 44,
																								Line:   28,
																							},
																							File:   "geo.flux",
																							Source: "r",
																							Start: ast.Position{
																								Column: 43,
																								Line:   28,
																							},
																						},
																					},
																					Name: "r",
																				},
																				Property: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 48,
																								Line:   28,
																							},
																							File:   "geo.flux",
																							Source: "_g8",
																							Start: ast.Position{
																								Column: 45,
																								Line:   28,
																							},
																						},
																					},
																					Name: "_g8",
																				},
																			},
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 48,
																						Line:   28,
																					},
																					File:   "geo.flux",
																					Source: "exists r._g8",
																					Start: ast.Position{
																						Column: 36,
																						Line:   28,
																					},
																				},
																			},
																			Operator: 14,
																		},
																	},
																},
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 14,
																			Line:   33,
																		},
																		File:   "geo.flux",
																		Source: "if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
																		Start: ast.Position{
																			Column: 9,
																			Line:   27,
																		},
																	},
																},
																Consequent: &ast.CallExpression{
																	Arguments: []ast.Expression{&ast.ObjectExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 90,
																					Line:   27,
																				},
																				File:   "geo.flux",
																				Source: "value: r._g7, set: grid.set",
																				Start: ast.Position{
																					Column: 63,
																					Line:   27,
																				},
																			},
																		},
																		Properties: []*ast.Property{&ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 75,
																						Line:   27,
																					},
																					File:   "geo.flux",
																					Source: "value: r._g7",
																					Start: ast.Position{
																						Column: 63,
																						Line:   27,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 68,
																							Line:   27,
																						},
																						File:   "geo.flux",
																						Source: "value",
																						Start: ast.Position{
																							Column: 63,
																							Line:   27,
																						},
																					},
																				},
																				Name: "value",
																			},
																			Value: &ast.MemberExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 75,
																							Line:   27,
																						},
																						File:   "geo.flux",
																						Source: "r._g7",
																						Start: ast.Position{
																							Column: 70,
																							Line:   27,
																						},
																					},
																				},
																				Object: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 71,
																								Line:   27,
																							},
																							File:   "geo.flux",
																							Source: "r",
																							Start: ast.Position{
																								Column: 70,
																								Line:   27,
																							},
																						},
																					},
																					Name: "r",
																				},
																				Property: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 75,
																								Line:   27,
																							},
																							File:   "geo.flux",
																							Source: "_g7",
																							Start: ast.Position{
																								Column: 72,
																								Line:   27,
																							},
																						},
																					},
																					Name: "_g7",
																				},
																			},
																		}, &ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 90,
																						Line:   27,
																					},
																					File:   "geo.flux",
																					Source: "set: grid.set",
																					Start: ast.Position{
																						Column: 77,
																						Line:   27,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 80,
																							Line:   27,
																						},
																						File:   "geo.flux",
																						Source: "set",
																						Start: ast.Position{
																							Column: 77,
																							Line:   27,
																						},
																					},
																				},
																				Name: "set",
																			},
																			Value: &ast.MemberExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 90,
																							Line:   27,
																						},
																						File:   "geo.flux",
																						Source: "grid.set",
																						Start: ast.Position{
																							Column: 82,
																							Line:   27,
																						},
																					},
																				},
																				Object: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 86,
																								Line:   27,
																							},
																							File:   "geo.flux",
																							Source: "grid",
																							Start: ast.Position{
																								Column: 82,
																								Line:   27,
																							},
																						},
																					},
																					Name: "grid",
																				},
																				Property: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 90,
																								Line:   27,
																							},
																							File:   "geo.flux",
																							Source: "set",
																							Start: ast.Position{
																								Column: 87,
																								Line:   27,
																							},
																						},
																					},
																					Name: "set",
																				},
																			},
																		}},
																		With: nil,
																	}},
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 91,
																				Line:   27,
																			},
																			File:   "geo.flux",
																			Source: "contains(value: r._g7, set: grid.set)",
																			Start: ast.Position{
																				Column: 54,
																				Line:   27,
																			},
																		},
																	},
																	Callee: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 62,
																					Line:   27,
																				},
																				File:   "geo.flux",
																				Source: "contains",
																				Start: ast.Position{
																					Column: 54,
																					Line:   27,
																				},
																			},
																		},
																		Name: "contains",
																	},
																},
																Test: &ast.LogicalExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 48,
																				Line:   27,
																			},
																			File:   "geo.flux",
																			Source: "grid.precision == 7 and exists r._g7",
																			Start: ast.Position{
																				Column: 12,
																				Line:   27,
																			},
																		},
																	},
																	Left: &ast.BinaryExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 31,
																					Line:   27,
																				},
																				File:   "geo.flux",
																				Source: "grid.precision == 7",
																				Start: ast.Position{
																					Column: 12,
																					Line:   27,
																				},
																			},
																		},
																		Left: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 26,
																						Line:   27,
																					},
																					File:   "geo.flux",
																					Source: "grid.precision",
																					Start: ast.Position{
																						Column: 12,
																						Line:   27,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 16,
																							Line:   27,
																						},
																						File:   "geo.flux",
																						Source: "grid",
																						Start: ast.Position{
																							Column: 12,
																							Line:   27,
																						},
																					},
																				},
																				Name: "grid",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 26,
																							Line:   27,
																						},
																						File:   "geo.flux",
																						Source: "precision",
																						Start: ast.Position{
																							Column: 17,
																							Line:   27,
																						},
																					},
																				},
																				Name: "precision",
																			},
																		},
																		Operator: 17,
																		Right: &ast.IntegerLiteral{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 31,
																						Line:   27,
																					},
																					File:   "geo.flux",
																					Source: "7",
																					Start: ast.Position{
																						Column: 30,
																						Line:   27,
																					},
																				},
																			},
																			Value: int64(7),
																		},
																	},
																	Operator: 1,
																	Right: &ast.UnaryExpression{
																		Argument: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 48,
																						Line:   27,
																					},
																					File:   "geo.flux",
																					Source: "r._g7",
																					Start: ast.Position{
																						Column: 43,
																						Line:   27,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 44,
																							Line:   27,
																						},
																						File:   "geo.flux",
																						Source: "r",
																						Start: ast.Position{
																							Column: 43,
																							Line:   27,
																						},
																					},
																				},
																				Name: "r",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 48,
																							Line:   27,
																						},
																						File:   "geo.flux",
																						Source: "_g7",
																						Start: ast.Position{
																							Column: 45,
																							Line:   27,
																						},
																					},
																				},
																				Name: "_g7",
																			},
																		},
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 48,
																					Line:   27,
																				},
																				File:   "geo.flux",
																				Source: "exists r._g7",
																				Start: ast.Position{
																					Column: 36,
																					Line:   27,
																				},
																			},
																		},
																		Operator: 14,
																	},
																},
															},
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 14,
																		Line:   33,
																	},
																	File:   "geo.flux",
																	Source: "if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
																	Start: ast.Position{
																		Column: 9,
																		Line:   26,
																	},
																},
															},
															Consequent: &ast.CallExpression{
																Arguments: []ast.Expression{&ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 90,
																				Line:   26,
																			},
																			File:   "geo.flux",
																			Source: "value: r._g6, set: grid.set",
																			Start: ast.Position{
																				Column: 63,
																				Line:   26,
																			},
																		},
																	},
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 75,
																					Line:   26,
																				},
																				File:   "geo.flux",
																				Source: "value: r._g6",
																				Start: ast.Position{
																					Column: 63,
																					Line:   26,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 68,
																						Line:   26,
																					},
																					File:   "geo.flux",
																					Source: "value",
																					Start: ast.Position{
																						Column: 63,
																						Line:   26,
																					},
																				},
																			},
																			Name: "value",
																		},
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 75,
																						Line:   26,
																					},
																					File:   "geo.flux",
																					Source: "r._g6",
																					Start: ast.Position{
																						Column: 70,
																						Line:   26,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 71,
																							Line:   26,
																						},
																						File:   "geo.flux",
																						Source: "r",
																						Start: ast.Position{
																							Column: 70,
																							Line:   26,
																						},
																					},
																				},
																				Name: "r",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 75,
																							Line:   26,
																						},
																						File:   "geo.flux",
																						Source: "_g6",
																						Start: ast.Position{
																							Column: 72,
																							Line:   26,
																						},
																					},
																				},
																				Name: "_g6",
																			},
																		},
																	}, &ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 90,
																					Line:   26,
																				},
																				File:   "geo.flux",
																				Source: "set: grid.set",
																				Start: ast.Position{
																					Column: 77,
																					Line:   26,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 80,
																						Line:   26,
																					},
																					File:   "geo.flux",
																					Source: "set",
																					Start: ast.Position{
																						Column: 77,
																						Line:   26,
																					},
																				},
																			},
																			Name: "set",
																		},
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 90,
																						Line:   26,
																					},
																					File:   "geo.flux",
																					Source: "grid.set",
																					Start: ast.Position{
																						Column: 82,
																						Line:   26,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 86,
																							Line:   26,
																						},
																						File:   "geo.flux",
																						Source: "grid",
																						Start: ast.Position{
																							Column: 82,
																							Line:   26,
																						},
																					},
																				},
																				Name: "grid",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 90,
																							Line:   26,
																						},
																						File:   "geo.flux",
																						Source: "set",
																						Start: ast.Position{
																							Column: 87,
																							Line:   26,
																						},
																					},
																				},
																				Name: "set",
																			},
																		},
																	}},
																	With: nil,
																}},
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 91,
																			Line:   26,
																		},
																		File:   "geo.flux",
																		Source: "contains(value: r._g6, set: grid.set)",
																		Start: ast.Position{
																			Column: 54,
																			Line:   26,
																		},
																	},
																},
																Callee: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 62,
																				Line:   26,
																			},
																			File:   "geo.flux",
																			Source: "contains",
																			Start: ast.Position{
																				Column: 54,
																				Line:   26,
																			},
																		},
																	},
																	Name: "contains",
																},
															},
															Test: &ast.LogicalExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 48,
																			Line:   26,
																		},
																		File:   "geo.flux",
																		Source: "grid.precision == 6 and exists r._g6",
																		Start: ast.Position{
																			Column: 12,
																			Line:   26,
																		},
																	},
																},
																Left: &ast.BinaryExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 31,
																				Line:   26,
																			},
																			File:   "geo.flux",
																			Source: "grid.precision == 6",
																			Start: ast.Position{
																				Column: 12,
																				Line:   26,
																			},
																		},
																	},
																	Left: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 26,
																					Line:   26,
																				},
																				File:   "geo.flux",
																				Source: "grid.precision",
																				Start: ast.Position{
																					Column: 12,
																					Line:   26,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 16,
																						Line:   26,
																					},
																					File:   "geo.flux",
																					Source: "grid",
																					Start: ast.Position{
																						Column: 12,
																						Line:   26,
																					},
																				},
																			},
																			Name: "grid",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 26,
																						Line:   26,
																					},
																					File:   "geo.flux",
																					Source: "precision",
																					Start: ast.Position{
																						Column: 17,
																						Line:   26,
																					},
																				},
																			},
																			Name: "precision",
																		},
																	},
																	Operator: 17,
																	Right: &ast.IntegerLiteral{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 31,
																					Line:   26,
																				},
																				File:   "geo.flux",
																				Source: "6",
																				Start: ast.Position{
																					Column: 30,
																					Line:   26,
																				},
																			},
																		},
																		Value: int64(6),
																	},
																},
																Operator: 1,
																Right: &ast.UnaryExpression{
																	Argument: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 48,
																					Line:   26,
																				},
																				File:   "geo.flux",
																				Source: "r._g6",
																				Start: ast.Position{
																					Column: 43,
																					Line:   26,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 44,
																						Line:   26,
																					},
																					File:   "geo.flux",
																					Source: "r",
																					Start: ast.Position{
																						Column: 43,
																						Line:   26,
																					},
																				},
																			},
																			Name: "r",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 48,
																						Line:   26,
																					},
																					File:   "geo.flux",
																					Source: "_g6",
																					Start: ast.Position{
																						Column: 45,
																						Line:   26,
																					},
																				},
																			},
																			Name: "_g6",
																		},
																	},
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 48,
																				Line:   26,
																			},
																			File:   "geo.flux",
																			Source: "exists r._g6",
																			Start: ast.Position{
																				Column: 36,
																				Line:   26,
																			},
																		},
																	},
																	Operator: 14,
																},
															},
														},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 14,
																	Line:   33,
																},
																File:   "geo.flux",
																Source: "if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
																Start: ast.Position{
																	Column: 9,
																	Line:   25,
																},
															},
														},
														Consequent: &ast.CallExpression{
															Arguments: []ast.Expression{&ast.ObjectExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 90,
																			Line:   25,
																		},
																		File:   "geo.flux",
																		Source: "value: r._g5, set: grid.set",
																		Start: ast.Position{
																			Column: 63,
																			Line:   25,
																		},
																	},
																},
																Properties: []*ast.Property{&ast.Property{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 75,
																				Line:   25,
																			},
																			File:   "geo.flux",
																			Source: "value: r._g5",
																			Start: ast.Position{
																				Column: 63,
																				Line:   25,
																			},
																		},
																	},
																	Key: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 68,
																					Line:   25,
																				},
																				File:   "geo.flux",
																				Source: "value",
																				Start: ast.Position{
																					Column: 63,
																					Line:   25,
																				},
																			},
																		},
																		Name: "value",
																	},
																	Value: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 75,
																					Line:   25,
																				},
																				File:   "geo.flux",
																				Source: "r._g5",
																				Start: ast.Position{
																					Column: 70,
																					Line:   25,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 71,
																						Line:   25,
																					},
																					File:   "geo.flux",
																					Source: "r",
																					Start: ast.Position{
																						Column: 70,
																						Line:   25,
																					},
																				},
																			},
																			Name: "r",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 75,
																						Line:   25,
																					},
																					File:   "geo.flux",
																					Source: "_g5",
																					Start: ast.Position{
																						Column: 72,
																						Line:   25,
																					},
																				},
																			},
																			Name: "_g5",
																		},
																	},
																}, &ast.Property{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 90,
																				Line:   25,
																			},
																			File:   "geo.flux",
																			Source: "set: grid.set",
																			Start: ast.Position{
																				Column: 77,
																				Line:   25,
																			},
																		},
																	},
																	Key: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 80,
																					Line:   25,
																				},
																				File:   "geo.flux",
																				Source: "set",
																				Start: ast.Position{
																					Column: 77,
																					Line:   25,
																				},
																			},
																		},
																		Name: "set",
																	},
																	Value: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 90,
																					Line:   25,
																				},
																				File:   "geo.flux",
																				Source: "grid.set",
																				Start: ast.Position{
																					Column: 82,
																					Line:   25,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 86,
																						Line:   25,
																					},
																					File:   "geo.flux",
																					Source: "grid",
																					Start: ast.Position{
																						Column: 82,
																						Line:   25,
																					},
																				},
																			},
																			Name: "grid",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 90,
																						Line:   25,
																					},
																					File:   "geo.flux",
																					Source: "set",
																					Start: ast.Position{
																						Column: 87,
																						Line:   25,
																					},
																				},
																			},
																			Name: "set",
																		},
																	},
																}},
																With: nil,
															}},
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 91,
																		Line:   25,
																	},
																	File:   "geo.flux",
																	Source: "contains(value: r._g5, set: grid.set)",
																	Start: ast.Position{
																		Column: 54,
																		Line:   25,
																	},
																},
															},
															Callee: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 62,
																			Line:   25,
																		},
																		File:   "geo.flux",
																		Source: "contains",
																		Start: ast.Position{
																			Column: 54,
																			Line:   25,
																		},
																	},
																},
																Name: "contains",
															},
														},
														Test: &ast.LogicalExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 48,
																		Line:   25,
																	},
																	File:   "geo.flux",
																	Source: "grid.precision == 5 and exists r._g5",
																	Start: ast.Position{
																		Column: 12,
																		Line:   25,
																	},
																},
															},
															Left: &ast.BinaryExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 31,
																			Line:   25,
																		},
																		File:   "geo.flux",
																		Source: "grid.precision == 5",
																		Start: ast.Position{
																			Column: 12,
																			Line:   25,
																		},
																	},
																},
																Left: &ast.MemberExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 26,
																				Line:   25,
																			},
																			File:   "geo.flux",
																			Source: "grid.precision",
																			Start: ast.Position{
																				Column: 12,
																				Line:   25,
																			},
																		},
																	},
																	Object: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 16,
																					Line:   25,
																				},
																				File:   "geo.flux",
																				Source: "grid",
																				Start: ast.Position{
																					Column: 12,
																					Line:   25,
																				},
																			},
																		},
																		Name: "grid",
																	},
																	Property: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 26,
																					Line:   25,
																				},
																				File:   "geo.flux",
																				Source: "precision",
																				Start: ast.Position{
																					Column: 17,
																					Line:   25,
																				},
																			},
																		},
																		Name: "precision",
																	},
																},
																Operator: 17,
																Right: &ast.IntegerLiteral{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 31,
																				Line:   25,
																			},
																			File:   "geo.flux",
																			Source: "5",
																			Start: ast.Position{
																				Column: 30,
																				Line:   25,
																			},
																		},
																	},
																	Value: int64(5),
																},
															},
															Operator: 1,
															Right: &ast.UnaryExpression{
																Argument: &ast.MemberExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 48,
																				Line:   25,
																			},
																			File:   "geo.flux",
																			Source: "r._g5",
																			Start: ast.Position{
																				Column: 43,
																				Line:   25,
																			},
																		},
																	},
																	Object: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 44,
																					Line:   25,
																				},
																				File:   "geo.flux",
																				Source: "r",
																				Start: ast.Position{
																					Column: 43,
																					Line:   25,
																				},
																			},
																		},
																		Name: "r",
																	},
																	Property: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 48,
																					Line:   25,
																				},
																				File:   "geo.flux",
																				Source: "_g5",
																				Start: ast.Position{
																					Column: 45,
																					Line:   25,
																				},
																			},
																		},
																		Name: "_g5",
																	},
																},
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 48,
																			Line:   25,
																		},
																		File:   "geo.flux",
																		Source: "exists r._g5",
																		Start: ast.Position{
																			Column: 36,
																			Line:   25,
																		},
																	},
																},
																Operator: 14,
															},
														},
													},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 14,
																Line:   33,
															},
															File:   "geo.flux",
															Source: "if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
															Start: ast.Position{
																Column: 9,
																Line:   24,
															},
														},
													},
													Consequent: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 90,
																		Line:   24,
																	},
																	File:   "geo.flux",
																	Source: "value: r._g4, set: grid.set",
																	Start: ast.Position{
																		Column: 63,
																		Line:   24,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 75,
																			Line:   24,
																		},
																		File:   "geo.flux",
																		Source: "value: r._g4",
																		Start: ast.Position{
																			Column: 63,
																			Line:   24,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 68,
																				Line:   24,
																			},
																			File:   "geo.flux",
																			Source: "value",
																			Start: ast.Position{
																				Column: 63,
																				Line:   24,
																			},
																		},
																	},
																	Name: "value",
																},
																Value: &ast.MemberExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 75,
																				Line:   24,
																			},
																			File:   "geo.flux",
																			Source: "r._g4",
																			Start: ast.Position{
																				Column: 70,
																				Line:   24,
																			},
																		},
																	},
																	Object: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 71,
																					Line:   24,
																				},
																				File:   "geo.flux",
																				Source: "r",
																				Start: ast.Position{
																					Column: 70,
																					Line:   24,
																				},
																			},
																		},
																		Name: "r",
																	},
																	Property: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 75,
																					Line:   24,
																				},
																				File:   "geo.flux",
																				Source: "_g4",
																				Start: ast.Position{
																					Column: 72,
																					Line:   24,
																				},
																			},
																		},
																		Name: "_g4",
																	},
																},
															}, &ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 90,
																			Line:   24,
																		},
																		File:   "geo.flux",
																		Source: "set: grid.set",
																		Start: ast.Position{
																			Column: 77,
																			Line:   24,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 80,
																				Line:   24,
																			},
																			File:   "geo.flux",
																			Source: "set",
																			Start: ast.Position{
																				Column: 77,
																				Line:   24,
																			},
																		},
																	},
																	Name: "set",
																},
																Value: &ast.MemberExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 90,
																				Line:   24,
																			},
																			File:   "geo.flux",
																			Source: "grid.set",
																			Start: ast.Position{
																				Column: 82,
																				Line:   24,
																			},
																		},
																	},
																	Object: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 86,
																					Line:   24,
																				},
																				File:   "geo.flux",
																				Source: "grid",
																				Start: ast.Position{
																					Column: 82,
																					Line:   24,
																				},
																			},
																		},
																		Name: "grid",
																	},
																	Property: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 90,
																					Line:   24,
																				},
																				File:   "geo.flux",
																				Source: "set",
																				Start: ast.Position{
																					Column: 87,
																					Line:   24,
																				},
																			},
																		},
																		Name: "set",
																	},
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 91,
																	Line:   24,
																},
																File:   "geo.flux",
																Source: "contains(value: r._g4, set: grid.set)",
																Start: ast.Position{
																	Column: 54,
																	Line:   24,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 62,
																		Line:   24,
																	},
																	File:   "geo.flux",
																	Source: "contains",
																	Start: ast.Position{
																		Column: 54,
																		Line:   24,
																	},
																},
															},
															Name: "contains",
														},
													},
													Test: &ast.LogicalExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 48,
																	Line:   24,
																},
																File:   "geo.flux",
																Source: "grid.precision == 4 and exists r._g4",
																Start: ast.Position{
																	Column: 12,
																	Line:   24,
																},
															},
														},
														Left: &ast.BinaryExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 31,
																		Line:   24,
																	},
																	File:   "geo.flux",
																	Source: "grid.precision == 4",
																	Start: ast.Position{
																		Column: 12,
																		Line:   24,
																	},
																},
															},
															Left: &ast.MemberExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 26,
																			Line:   24,
																		},
																		File:   "geo.flux",
																		Source: "grid.precision",
																		Start: ast.Position{
																			Column: 12,
																			Line:   24,
																		},
																	},
																},
																Object: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 16,
																				Line:   24,
																			},
																			File:   "geo.flux",
																			Source: "grid",
																			Start: ast.Position{
																				Column: 12,
																				Line:   24,
																			},
																		},
																	},
																	Name: "grid",
																},
																Property: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 26,
																				Line:   24,
																			},
																			File:   "geo.flux",
																			Source: "precision",
																			Start: ast.Position{
																				Column: 17,
																				Line:   24,
																			},
																		},
																	},
																	Name: "precision",
																},
															},
															Operator: 17,
															Right: &ast.IntegerLiteral{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 31,
																			Line:   24,
																		},
																		File:   "geo.flux",
																		Source: "4",
																		Start: ast.Position{
																			Column: 30,
																			Line:   24,
																		},
																	},
																},
																Value: int64(4),
															},
														},
														Operator: 1,
														Right: &ast.UnaryExpression{
															Argument: &ast.MemberExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 48,
																			Line:   24,
																		},
																		File:   "geo.flux",
																		Source: "r._g4",
																		Start: ast.Position{
																			Column: 43,
																			Line:   24,
																		},
																	},
																},
																Object: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 44,
																				Line:   24,
																			},
																			File:   "geo.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 43,
																				Line:   24,
																			},
																		},
																	},
																	Name: "r",
																},
																Property: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 48,
																				Line:   24,
																			},
																			File:   "geo.flux",
																			Source: "_g4",
																			Start: ast.Position{
																				Column: 45,
																				Line:   24,
																			},
																		},
																	},
																	Name: "_g4",
																},
															},
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 48,
																		Line:   24,
																	},
																	File:   "geo.flux",
																	Source: "exists r._g4",
																	Start: ast.Position{
																		Column: 36,
																		Line:   24,
																	},
																},
															},
															Operator: 14,
														},
													},
												},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 14,
															Line:   33,
														},
														File:   "geo.flux",
														Source: "if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
														Start: ast.Position{
															Column: 9,
															Line:   23,
														},
													},
												},
												Consequent: &ast.CallExpression{
													Arguments: []ast.Expression{&ast.ObjectExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 90,
																	Line:   23,
																},
																File:   "geo.flux",
																Source: "value: r._g3, set: grid.set",
																Start: ast.Position{
																	Column: 63,
																	Line:   23,
																},
															},
														},
														Properties: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 75,
																		Line:   23,
																	},
																	File:   "geo.flux",
																	Source: "value: r._g3",
																	Start: ast.Position{
																		Column: 63,
																		Line:   23,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 68,
																			Line:   23,
																		},
																		File:   "geo.flux",
																		Source: "value",
																		Start: ast.Position{
																			Column: 63,
																			Line:   23,
																		},
																	},
																},
																Name: "value",
															},
															Value: &ast.MemberExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 75,
																			Line:   23,
																		},
																		File:   "geo.flux",
																		Source: "r._g3",
																		Start: ast.Position{
																			Column: 70,
																			Line:   23,
																		},
																	},
																},
																Object: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 71,
																				Line:   23,
																			},
																			File:   "geo.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 70,
																				Line:   23,
																			},
																		},
																	},
																	Name: "r",
																},
																Property: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 75,
																				Line:   23,
																			},
																			File:   "geo.flux",
																			Source: "_g3",
																			Start: ast.Position{
																				Column: 72,
																				Line:   23,
																			},
																		},
																	},
																	Name: "_g3",
																},
															},
														}, &ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 90,
																		Line:   23,
																	},
																	File:   "geo.flux",
																	Source: "set: grid.set",
																	Start: ast.Position{
																		Column: 77,
																		Line:   23,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 80,
																			Line:   23,
																		},
																		File:   "geo.flux",
																		Source: "set",
																		Start: ast.Position{
																			Column: 77,
																			Line:   23,
																		},
																	},
																},
																Name: "set",
															},
															Value: &ast.MemberExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 90,
																			Line:   23,
																		},
																		File:   "geo.flux",
																		Source: "grid.set",
																		Start: ast.Position{
																			Column: 82,
																			Line:   23,
																		},
																	},
																},
																Object: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 86,
																				Line:   23,
																			},
																			File:   "geo.flux",
																			Source: "grid",
																			Start: ast.Position{
																				Column: 82,
																				Line:   23,
																			},
																		},
																	},
																	Name: "grid",
																},
																Property: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 90,
																				Line:   23,
																			},
																			File:   "geo.flux",
																			Source: "set",
																			Start: ast.Position{
																				Column: 87,
																				Line:   23,
																			},
																		},
																	},
																	Name: "set",
																},
															},
														}},
														With: nil,
													}},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 91,
																Line:   23,
															},
															File:   "geo.flux",
															Source: "contains(value: r._g3, set: grid.set)",
															Start: ast.Position{
																Column: 54,
																Line:   23,
															},
														},
													},
													Callee: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 62,
																	Line:   23,
																},
																File:   "geo.flux",
																Source: "contains",
																Start: ast.Position{
																	Column: 54,
																	Line:   23,
																},
															},
														},
														Name: "contains",
													},
												},
												Test: &ast.LogicalExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 48,
																Line:   23,
															},
															File:   "geo.flux",
															Source: "grid.precision == 3 and exists r._g3",
															Start: ast.Position{
																Column: 12,
																Line:   23,
															},
														},
													},
													Left: &ast.BinaryExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 31,
																	Line:   23,
																},
																File:   "geo.flux",
																Source: "grid.precision == 3",
																Start: ast.Position{
																	Column: 12,
																	Line:   23,
																},
															},
														},
														Left: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 26,
																		Line:   23,
																	},
																	File:   "geo.flux",
																	Source: "grid.precision",
																	Start: ast.Position{
																		Column: 12,
																		Line:   23,
																	},
																},
															},
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 16,
																			Line:   23,
																		},
																		File:   "geo.flux",
																		Source: "grid",
																		Start: ast.Position{
																			Column: 12,
																			Line:   23,
																		},
																	},
																},
																Name: "grid",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 26,
																			Line:   23,
																		},
																		File:   "geo.flux",
																		Source: "precision",
																		Start: ast.Position{
																			Column: 17,
																			Line:   23,
																		},
																	},
																},
																Name: "precision",
															},
														},
														Operator: 17,
														Right: &ast.IntegerLiteral{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 31,
																		Line:   23,
																	},
																	File:   "geo.flux",
																	Source: "3",
																	Start: ast.Position{
																		Column: 30,
																		Line:   23,
																	},
																},
															},
															Value: int64(3),
														},
													},
													Operator: 1,
													Right: &ast.UnaryExpression{
														Argument: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 48,
																		Line:   23,
																	},
																	File:   "geo.flux",
																	Source: "r._g3",
																	Start: ast.Position{
																		Column: 43,
																		Line:   23,
																	},
																},
															},
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 44,
																			Line:   23,
																		},
																		File:   "geo.flux",
																		Source: "r",
																		Start: ast.Position{
																			Column: 43,
																			Line:   23,
																		},
																	},
																},
																Name: "r",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 48,
																			Line:   23,
																		},
																		File:   "geo.flux",
																		Source: "_g3",
																		Start: ast.Position{
																			Column: 45,
																			Line:   23,
																		},
																	},
																},
																Name: "_g3",
															},
														},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 48,
																	Line:   23,
																},
																File:   "geo.flux",
																Source: "exists r._g3",
																Start: ast.Position{
																	Column: 36,
																	Line:   23,
																},
															},
														},
														Operator: 14,
													},
												},
											},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 14,
														Line:   33,
													},
													File:   "geo.flux",
													Source: "if grid.precision == 2 and exists r._g2 then contains(value: r._g2, set: grid.set)\n\t  else if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
													Start: ast.Position{
														Column: 9,
														Line:   22,
													},
												},
											},
											Consequent: &ast.CallExpression{
												Arguments: []ast.Expression{&ast.ObjectExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 90,
																Line:   22,
															},
															File:   "geo.flux",
															Source: "value: r._g2, set: grid.set",
															Start: ast.Position{
																Column: 63,
																Line:   22,
															},
														},
													},
													Properties: []*ast.Property{&ast.Property{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 75,
																	Line:   22,
																},
																File:   "geo.flux",
																Source: "value: r._g2",
																Start: ast.Position{
																	Column: 63,
																	Line:   22,
																},
															},
														},
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 68,
																		Line:   22,
																	},
																	File:   "geo.flux",
																	Source: "value",
																	Start: ast.Position{
																		Column: 63,
																		Line:   22,
																	},
																},
															},
															Name: "value",
														},
														Value: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 75,
																		Line:   22,
																	},
																	File:   "geo.flux",
																	Source: "r._g2",
																	Start: ast.Position{
																		Column: 70,
																		Line:   22,
																	},
																},
															},
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 71,
																			Line:   22,
																		},
																		File:   "geo.flux",
																		Source: "r",
																		Start: ast.Position{
																			Column: 70,
																			Line:   22,
																		},
																	},
																},
																Name: "r",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 75,
																			Line:   22,
																		},
																		File:   "geo.flux",
																		Source: "_g2",
																		Start: ast.Position{
																			Column: 72,
																			Line:   22,
																		},
																	},
																},
																Name: "_g2",
															},
														},
													}, &ast.Property{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 90,
																	Line:   22,
																},
																File:   "geo.flux",
																Source: "set: grid.set",
																Start: ast.Position{
																	Column: 77,
																	Line:   22,
																},
															},
														},
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 80,
																		Line:   22,
																	},
																	File:   "geo.flux",
																	Source: "set",
																	Start: ast.Position{
																		Column: 77,
																		Line:   22,
																	},
																},
															},
															Name: "set",
														},
														Value: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 90,
																		Line:   22,
																	},
																	File:   "geo.flux",
																	Source: "grid.set",
																	Start: ast.Position{
																		Column: 82,
																		Line:   22,
																	},
																},
															},
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 86,
																			Line:   22,
																		},
																		File:   "geo.flux",
																		Source: "grid",
																		Start: ast.Position{
																			Column: 82,
																			Line:   22,
																		},
																	},
																},
																Name: "grid",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 90,
																			Line:   22,
																		},
																		File:   "geo.flux",
																		Source: "set",
																		Start: ast.Position{
																			Column: 87,
																			Line:   22,
																		},
																	},
																},
																Name: "set",
															},
														},
													}},
													With: nil,
												}},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 91,
															Line:   22,
														},
														File:   "geo.flux",
														Source: "contains(value: r._g2, set: grid.set)",
														Start: ast.Position{
															Column: 54,
															Line:   22,
														},
													},
												},
												Callee: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 62,
																Line:   22,
															},
															File:   "geo.flux",
															Source: "contains",
															Start: ast.Position{
																Column: 54,
																Line:   22,
															},
														},
													},
													Name: "contains",
												},
											},
											Test: &ast.LogicalExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 48,
															Line:   22,
														},
														File:   "geo.flux",
														Source: "grid.precision == 2 and exists r._g2",
														Start: ast.Position{
															Column: 12,
															Line:   22,
														},
													},
												},
												Left: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 31,
																Line:   22,
															},
															File:   "geo.flux",
															Source: "grid.precision == 2",
															Start: ast.Position{
																Column: 12,
																Line:   22,
															},
														},
													},
													Left: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 26,
																	Line:   22,
																},
																File:   "geo.flux",
																Source: "grid.precision",
																Start: ast.Position{
																	Column: 12,
																	Line:   22,
																},
															},
														},
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 16,
																		Line:   22,
																	},
																	File:   "geo.flux",
																	Source: "grid",
																	Start: ast.Position{
																		Column: 12,
																		Line:   22,
																	},
																},
															},
															Name: "grid",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 26,
																		Line:   22,
																	},
																	File:   "geo.flux",
																	Source: "precision",
																	Start: ast.Position{
																		Column: 17,
																		Line:   22,
																	},
																},
															},
															Name: "precision",
														},
													},
													Operator: 17,
													Right: &ast.IntegerLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 31,
																	Line:   22,
																},
																File:   "geo.flux",
																Source: "2",
																Start: ast.Position{
																	Column: 30,
																	Line:   22,
																},
															},
														},
														Value: int64(2),
													},
												},
												Operator: 1,
												Right: &ast.UnaryExpression{
													Argument: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 48,
																	Line:   22,
																},
																File:   "geo.flux",
																Source: "r._g2",
																Start: ast.Position{
																	Column: 43,
																	Line:   22,
																},
															},
														},
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 44,
																		Line:   22,
																	},
																	File:   "geo.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 43,
																		Line:   22,
																	},
																},
															},
															Name: "r",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 48,
																		Line:   22,
																	},
																	File:   "geo.flux",
																	Source: "_g2",
																	Start: ast.Position{
																		Column: 45,
																		Line:   22,
																	},
																},
															},
															Name: "_g2",
														},
													},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 48,
																Line:   22,
															},
															File:   "geo.flux",
															Source: "exists r._g2",
															Start: ast.Position{
																Column: 36,
																Line:   22,
															},
														},
													},
													Operator: 14,
												},
											},
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   33,
												},
												File:   "geo.flux",
												Source: "if grid.precision == 1 and exists r._g1 then contains(value: r._g1, set: grid.set)\n\t  else if grid.precision == 2 and exists r._g2 then contains(value: r._g2, set: grid.set)\n\t  else if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false",
												Start: ast.Position{
													Column: 4,
													Line:   21,
												},
											},
										},
										Consequent: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 85,
															Line:   21,
														},
														File:   "geo.flux",
														Source: "value: r._g1, set: grid.set",
														Start: ast.Position{
															Column: 58,
															Line:   21,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 70,
																Line:   21,
															},
															File:   "geo.flux",
															Source: "value: r._g1",
															Start: ast.Position{
																Column: 58,
																Line:   21,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 63,
																	Line:   21,
																},
																File:   "geo.flux",
																Source: "value",
																Start: ast.Position{
																	Column: 58,
																	Line:   21,
																},
															},
														},
														Name: "value",
													},
													Value: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 70,
																	Line:   21,
																},
																File:   "geo.flux",
																Source: "r._g1",
																Start: ast.Position{
																	Column: 65,
																	Line:   21,
																},
															},
														},
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 66,
																		Line:   21,
																	},
																	File:   "geo.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 65,
																		Line:   21,
																	},
																},
															},
															Name: "r",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 70,
																		Line:   21,
																	},
																	File:   "geo.flux",
																	Source: "_g1",
																	Start: ast.Position{
																		Column: 67,
																		Line:   21,
																	},
																},
															},
															Name: "_g1",
														},
													},
												}, &ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 85,
																Line:   21,
															},
															File:   "geo.flux",
															Source: "set: grid.set",
															Start: ast.Position{
																Column: 72,
																Line:   21,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 75,
																	Line:   21,
																},
																File:   "geo.flux",
																Source: "set",
																Start: ast.Position{
																	Column: 72,
																	Line:   21,
																},
															},
														},
														Name: "set",
													},
													Value: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 85,
																	Line:   21,
																},
																File:   "geo.flux",
																Source: "grid.set",
																Start: ast.Position{
																	Column: 77,
																	Line:   21,
																},
															},
														},
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 81,
																		Line:   21,
																	},
																	File:   "geo.flux",
																	Source: "grid",
																	Start: ast.Position{
																		Column: 77,
																		Line:   21,
																	},
																},
															},
															Name: "grid",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 85,
																		Line:   21,
																	},
																	File:   "geo.flux",
																	Source: "set",
																	Start: ast.Position{
																		Column: 82,
																		Line:   21,
																	},
																},
															},
															Name: "set",
														},
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 86,
														Line:   21,
													},
													File:   "geo.flux",
													Source: "contains(value: r._g1, set: grid.set)",
													Start: ast.Position{
														Column: 49,
														Line:   21,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 57,
															Line:   21,
														},
														File:   "geo.flux",
														Source: "contains",
														Start: ast.Position{
															Column: 49,
															Line:   21,
														},
													},
												},
												Name: "contains",
											},
										},
										Test: &ast.LogicalExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 43,
														Line:   21,
													},
													File:   "geo.flux",
													Source: "grid.precision == 1 and exists r._g1",
													Start: ast.Position{
														Column: 7,
														Line:   21,
													},
												},
											},
											Left: &ast.BinaryExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 26,
															Line:   21,
														},
														File:   "geo.flux",
														Source: "grid.precision == 1",
														Start: ast.Position{
															Column: 7,
															Line:   21,
														},
													},
												},
												Left: &ast.MemberExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 21,
																Line:   21,
															},
															File:   "geo.flux",
															Source: "grid.precision",
															Start: ast.Position{
																Column: 7,
																Line:   21,
															},
														},
													},
													Object: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 11,
																	Line:   21,
																},
																File:   "geo.flux",
																Source: "grid",
																Start: ast.Position{
																	Column: 7,
																	Line:   21,
																},
															},
														},
														Name: "grid",
													},
													Property: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 21,
																	Line:   21,
																},
																File:   "geo.flux",
																Source: "precision",
																Start: ast.Position{
																	Column: 12,
																	Line:   21,
																},
															},
														},
														Name: "precision",
													},
												},
												Operator: 17,
												Right: &ast.IntegerLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 26,
																Line:   21,
															},
															File:   "geo.flux",
															Source: "1",
															Start: ast.Position{
																Column: 25,
																Line:   21,
															},
														},
													},
													Value: int64(1),
												},
											},
											Operator: 1,
											Right: &ast.UnaryExpression{
												Argument: &ast.MemberExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 43,
																Line:   21,
															},
															File:   "geo.flux",
															Source: "r._g1",
															Start: ast.Position{
																Column: 38,
																Line:   21,
															},
														},
													},
													Object: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 39,
																	Line:   21,
																},
																File:   "geo.flux",
																Source: "r",
																Start: ast.Position{
																	Column: 38,
																	Line:   21,
																},
															},
														},
														Name: "r",
													},
													Property: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 43,
																	Line:   21,
																},
																File:   "geo.flux",
																Source: "_g1",
																Start: ast.Position{
																	Column: 40,
																	Line:   21,
																},
															},
														},
														Name: "_g1",
													},
												},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 43,
															Line:   21,
														},
														File:   "geo.flux",
														Source: "exists r._g1",
														Start: ast.Position{
															Column: 31,
															Line:   21,
														},
													},
												},
												Operator: 14,
											},
										},
									},
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 21,
													Line:   20,
												},
												File:   "geo.flux",
												Source: "r",
												Start: ast.Position{
													Column: 20,
													Line:   20,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 21,
														Line:   20,
													},
													File:   "geo.flux",
													Source: "r",
													Start: ast.Position{
														Column: 20,
														Line:   20,
													},
												},
											},
											Name: "r",
										},
										Value: nil,
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   34,
								},
								File:   "geo.flux",
								Source: "filter(fn: (r) =>\n\t  if grid.precision == 1 and exists r._g1 then contains(value: r._g1, set: grid.set)\n\t  else if grid.precision == 2 and exists r._g2 then contains(value: r._g2, set: grid.set)\n\t  else if grid.precision == 3 and exists r._g3 then contains(value: r._g3, set: grid.set)\n\t  else if grid.precision == 4 and exists r._g4 then contains(value: r._g4, set: grid.set)\n\t  else if grid.precision == 5 and exists r._g5 then contains(value: r._g5, set: grid.set)\n\t  else if grid.precision == 6 and exists r._g6 then contains(value: r._g6, set: grid.set)\n\t  else if grid.precision == 7 and exists r._g7 then contains(value: r._g7, set: grid.set)\n\t  else if grid.precision == 8 and exists r._g8 then contains(value: r._g8, set: grid.set)\n\t  else if grid.precision == 9 and exists r._g9 then contains(value: r._g9, set: grid.set)\n\t  else if grid.precision == 10 and exists r._g10 then contains(value: r._g10, set: grid.set)\n\t  else if grid.precision == 11 and exists r._g11 then contains(value: r._g11, set: grid.set)\n\t  else if grid.precision == 12 and exists r._g12 then contains(value: r._g12, set: grid.set)\n\t  else false\n    )",
								Start: ast.Position{
									Column: 8,
									Line:   20,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 14,
										Line:   20,
									},
									File:   "geo.flux",
									Source: "filter",
									Start: ast.Position{
										Column: 8,
										Line:   20,
									},
								},
							},
							Name: "filter",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   18,
							},
							File:   "geo.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 18,
								Line:   18,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   18,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 18,
									Line:   18,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   18,
							},
							File:   "geo.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 25,
								Line:   18,
							},
						},
					}},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 33,
								Line:   18,
							},
							File:   "geo.flux",
							Source: "grid",
							Start: ast.Position{
								Column: 29,
								Line:   18,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 33,
									Line:   18,
								},
								File:   "geo.flux",
								Source: "grid",
								Start: ast.Position{
									Column: 29,
									Line:   18,
								},
							},
						},
						Name: "grid",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 6,
						Line:   42,
					},
					File:   "geo.flux",
					Source: "geohashFilterEx = (tables=<-, grid, prefix=\"_g\") =>\n  tables\n    |> filter(fn: (r) =>\n      containsTag(row: r, tagKey: prefix + string(v: grid.precision), set: grid.set)\n    )",
					Start: ast.Position{
						Column: 1,
						Line:   38,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   38,
						},
						File:   "geo.flux",
						Source: "geohashFilterEx",
						Start: ast.Position{
							Column: 1,
							Line:   38,
						},
					},
				},
				Name: "geohashFilterEx",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   42,
						},
						File:   "geo.flux",
						Source: "(tables=<-, grid, prefix=\"_g\") =>\n  tables\n    |> filter(fn: (r) =>\n      containsTag(row: r, tagKey: prefix + string(v: grid.precision), set: grid.set)\n    )",
						Start: ast.Position{
							Column: 19,
							Line:   38,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 9,
									Line:   39,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 3,
									Line:   39,
								},
							},
						},
						Name: "tables",
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 6,
								Line:   42,
							},
							File:   "geo.flux",
							Source: "tables\n    |> filter(fn: (r) =>\n      containsTag(row: r, tagKey: prefix + string(v: grid.precision), set: grid.set)\n    )",
							Start: ast.Position{
								Column: 3,
								Line:   39,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 85,
										Line:   41,
									},
									File:   "geo.flux",
									Source: "fn: (r) =>\n      containsTag(row: r, tagKey: prefix + string(v: grid.precision), set: grid.set)",
									Start: ast.Position{
										Column: 15,
										Line:   40,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 85,
											Line:   41,
										},
										File:   "geo.flux",
										Source: "fn: (r) =>\n      containsTag(row: r, tagKey: prefix + string(v: grid.precision), set: grid.set)",
										Start: ast.Position{
											Column: 15,
											Line:   40,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   40,
											},
											File:   "geo.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 15,
												Line:   40,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.FunctionExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 85,
												Line:   41,
											},
											File:   "geo.flux",
											Source: "(r) =>\n      containsTag(row: r, tagKey: prefix + string(v: grid.precision), set: grid.set)",
											Start: ast.Position{
												Column: 19,
												Line:   40,
											},
										},
									},
									Body: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 84,
														Line:   41,
													},
													File:   "geo.flux",
													Source: "row: r, tagKey: prefix + string(v: grid.precision), set: grid.set",
													Start: ast.Position{
														Column: 19,
														Line:   41,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 25,
															Line:   41,
														},
														File:   "geo.flux",
														Source: "row: r",
														Start: ast.Position{
															Column: 19,
															Line:   41,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 22,
																Line:   41,
															},
															File:   "geo.flux",
															Source: "row",
															Start: ast.Position{
																Column: 19,
																Line:   41,
															},
														},
													},
													Name: "row",
												},
												Value: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 25,
																Line:   41,
															},
															File:   "geo.flux",
															Source: "r",
															Start: ast.Position{
																Column: 24,
																Line:   41,
															},
														},
													},
													Name: "r",
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 69,
															Line:   41,
														},
														File:   "geo.flux",
														Source: "tagKey: prefix + string(v: grid.precision)",
														Start: ast.Position{
															Column: 27,
															Line:   41,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 33,
																Line:   41,
															},
															File:   "geo.flux",
															Source: "tagKey",
															Start: ast.Position{
																Column: 27,
																Line:   41,
															},
														},
													},
													Name: "tagKey",
												},
												Value: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 69,
																Line:   41,
															},
															File:   "geo.flux",
															Source: "prefix + string(v: grid.precision)",
															Start: ast.Position{
																Column: 35,
																Line:   41,
															},
														},
													},
													Left: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 41,
																	Line:   41,
																},
																File:   "geo.flux",
																Source: "prefix",
																Start: ast.Position{
																	Column: 35,
																	Line:   41,
																},
															},
														},
														Name: "prefix",
													},
													Operator: 5,
													Right: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 68,
																		Line:   41,
																	},
																	File:   "geo.flux",
																	Source: "v: grid.precision",
																	Start: ast.Position{
																		Column: 51,
																		Line:   41,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 68,
																			Line:   41,
																		},
																		File:   "geo.flux",
																		Source: "v: grid.precision",
																		Start: ast.Position{
																			Column: 51,
																			Line:   41,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 52,
																				Line:   41,
																			},
																			File:   "geo.flux",
																			Source: "v",
																			Start: ast.Position{
																				Column: 51,
																				Line:   41,
																			},
																		},
																	},
																	Name: "v",
																},
																Value: &ast.MemberExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 68,
																				Line:   41,
																			},
																			File:   "geo.flux",
																			Source: "grid.precision",
																			Start: ast.Position{
																				Column: 54,
																				Line:   41,
																			},
																		},
																	},
																	Object: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 58,
																					Line:   41,
																				},
																				File:   "geo.flux",
																				Source: "grid",
																				Start: ast.Position{
																					Column: 54,
																					Line:   41,
																				},
																			},
																		},
																		Name: "grid",
																	},
																	Property: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 68,
																					Line:   41,
																				},
																				File:   "geo.flux",
																				Source: "precision",
																				Start: ast.Position{
																					Column: 59,
																					Line:   41,
																				},
																			},
																		},
																		Name: "precision",
																	},
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 69,
																	Line:   41,
																},
																File:   "geo.flux",
																Source: "string(v: grid.precision)",
																Start: ast.Position{
																	Column: 44,
																	Line:   41,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 50,
																		Line:   41,
																	},
																	File:   "geo.flux",
																	Source: "string",
																	Start: ast.Position{
																		Column: 44,
																		Line:   41,
																	},
																},
															},
															Name: "string",
														},
													},
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 84,
															Line:   41,
														},
														File:   "geo.flux",
														Source: "set: grid.set",
														Start: ast.Position{
															Column: 71,
															Line:   41,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 74,
																Line:   41,
															},
															File:   "geo.flux",
															Source: "set",
															Start: ast.Position{
																Column: 71,
																Line:   41,
															},
														},
													},
													Name: "set",
												},
												Value: &ast.MemberExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 84,
																Line:   41,
															},
															File:   "geo.flux",
															Source: "grid.set",
															Start: ast.Position{
																Column: 76,
																Line:   41,
															},
														},
													},
													Object: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 80,
																	Line:   41,
																},
																File:   "geo.flux",
																Source: "grid",
																Start: ast.Position{
																	Column: 76,
																	Line:   41,
																},
															},
														},
														Name: "grid",
													},
													Property: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 84,
																	Line:   41,
																},
																File:   "geo.flux",
																Source: "set",
																Start: ast.Position{
																	Column: 81,
																	Line:   41,
																},
															},
														},
														Name: "set",
													},
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 85,
													Line:   41,
												},
												File:   "geo.flux",
												Source: "containsTag(row: r, tagKey: prefix + string(v: grid.precision), set: grid.set)",
												Start: ast.Position{
													Column: 7,
													Line:   41,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   41,
													},
													File:   "geo.flux",
													Source: "containsTag",
													Start: ast.Position{
														Column: 7,
														Line:   41,
													},
												},
											},
											Name: "containsTag",
										},
									},
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 21,
													Line:   40,
												},
												File:   "geo.flux",
												Source: "r",
												Start: ast.Position{
													Column: 20,
													Line:   40,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 21,
														Line:   40,
													},
													File:   "geo.flux",
													Source: "r",
													Start: ast.Position{
														Column: 20,
														Line:   40,
													},
												},
											},
											Name: "r",
										},
										Value: nil,
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   42,
								},
								File:   "geo.flux",
								Source: "filter(fn: (r) =>\n      containsTag(row: r, tagKey: prefix + string(v: grid.precision), set: grid.set)\n    )",
								Start: ast.Position{
									Column: 8,
									Line:   40,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 14,
										Line:   40,
									},
									File:   "geo.flux",
									Source: "filter",
									Start: ast.Position{
										Column: 8,
										Line:   40,
									},
								},
							},
							Name: "filter",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   38,
							},
							File:   "geo.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 20,
								Line:   38,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   38,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 20,
									Line:   38,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   38,
							},
							File:   "geo.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 27,
								Line:   38,
							},
						},
					}},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   38,
							},
							File:   "geo.flux",
							Source: "grid",
							Start: ast.Position{
								Column: 31,
								Line:   38,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   38,
								},
								File:   "geo.flux",
								Source: "grid",
								Start: ast.Position{
									Column: 31,
									Line:   38,
								},
							},
						},
						Name: "grid",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 48,
								Line:   38,
							},
							File:   "geo.flux",
							Source: "prefix=\"_g\"",
							Start: ast.Position{
								Column: 37,
								Line:   38,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 43,
									Line:   38,
								},
								File:   "geo.flux",
								Source: "prefix",
								Start: ast.Position{
									Column: 37,
									Line:   38,
								},
							},
						},
						Name: "prefix",
					},
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 48,
									Line:   38,
								},
								File:   "geo.flux",
								Source: "\"_g\"",
								Start: ast.Position{
									Column: 44,
									Line:   38,
								},
							},
						},
						Value: "_g",
					},
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   51,
					},
					File:   "geo.flux",
					Source: "gridFilter = (tables=<-, fn=geohashFilter, box, minGridSize=9, maxGridSize=-1, geohashPrecision=-1, maxGeohashPrecision=12) => {\n  grid = getGrid(box: box, minSize: minGridSize, maxSize: maxGridSize, precision: geohashPrecision, maxPrecision: maxGeohashPrecision)\n  return\n    tables\n      |> fn(grid: grid)\n}",
					Start: ast.Position{
						Column: 1,
						Line:   46,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   46,
						},
						File:   "geo.flux",
						Source: "gridFilter",
						Start: ast.Position{
							Column: 1,
							Line:   46,
						},
					},
				},
				Name: "gridFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   51,
						},
						File:   "geo.flux",
						Source: "(tables=<-, fn=geohashFilter, box, minGridSize=9, maxGridSize=-1, geohashPrecision=-1, maxGeohashPrecision=12) => {\n  grid = getGrid(box: box, minSize: minGridSize, maxSize: maxGridSize, precision: geohashPrecision, maxPrecision: maxGeohashPrecision)\n  return\n    tables\n      |> fn(grid: grid)\n}",
						Start: ast.Position{
							Column: 14,
							Line:   46,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   51,
							},
							File:   "geo.flux",
							Source: "{\n  grid = getGrid(box: box, minSize: minGridSize, maxSize: maxGridSize, precision: geohashPrecision, maxPrecision: maxGeohashPrecision)\n  return\n    tables\n      |> fn(grid: grid)\n}",
							Start: ast.Position{
								Column: 128,
								Line:   46,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 135,
									Line:   47,
								},
								File:   "geo.flux",
								Source: "grid = getGrid(box: box, minSize: minGridSize, maxSize: maxGridSize, precision: geohashPrecision, maxPrecision: maxGeohashPrecision)",
								Start: ast.Position{
									Column: 3,
									Line:   47,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 7,
										Line:   47,
									},
									File:   "geo.flux",
									Source: "grid",
									Start: ast.Position{
										Column: 3,
										Line:   47,
									},
								},
							},
							Name: "grid",
						},
						Init: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 134,
											Line:   47,
										},
										File:   "geo.flux",
										Source: "box: box, minSize: minGridSize, maxSize: maxGridSize, precision: geohashPrecision, maxPrecision: maxGeohashPrecision",
										Start: ast.Position{
											Column: 18,
											Line:   47,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 26,
												Line:   47,
											},
											File:   "geo.flux",
											Source: "box: box",
											Start: ast.Position{
												Column: 18,
												Line:   47,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 21,
													Line:   47,
												},
												File:   "geo.flux",
												Source: "box",
												Start: ast.Position{
													Column: 18,
													Line:   47,
												},
											},
										},
										Name: "box",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 26,
													Line:   47,
												},
												File:   "geo.flux",
												Source: "box",
												Start: ast.Position{
													Column: 23,
													Line:   47,
												},
											},
										},
										Name: "box",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 48,
												Line:   47,
											},
											File:   "geo.flux",
											Source: "minSize: minGridSize",
											Start: ast.Position{
												Column: 28,
												Line:   47,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   47,
												},
												File:   "geo.flux",
												Source: "minSize",
												Start: ast.Position{
													Column: 28,
													Line:   47,
												},
											},
										},
										Name: "minSize",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 48,
													Line:   47,
												},
												File:   "geo.flux",
												Source: "minGridSize",
												Start: ast.Position{
													Column: 37,
													Line:   47,
												},
											},
										},
										Name: "minGridSize",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 70,
												Line:   47,
											},
											File:   "geo.flux",
											Source: "maxSize: maxGridSize",
											Start: ast.Position{
												Column: 50,
												Line:   47,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 57,
													Line:   47,
												},
												File:   "geo.flux",
												Source: "maxSize",
												Start: ast.Position{
													Column: 50,
													Line:   47,
												},
											},
										},
										Name: "maxSize",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 70,
													Line:   47,
												},
												File:   "geo.flux",
												Source: "maxGridSize",
												Start: ast.Position{
													Column: 59,
													Line:   47,
												},
											},
										},
										Name: "maxGridSize",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 99,
												Line:   47,
											},
											File:   "geo.flux",
											Source: "precision: geohashPrecision",
											Start: ast.Position{
												Column: 72,
												Line:   47,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   47,
												},
												File:   "geo.flux",
												Source: "precision",
												Start: ast.Position{
													Column: 72,
													Line:   47,
												},
											},
										},
										Name: "precision",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 99,
													Line:   47,
												},
												File:   "geo.flux",
												Source: "geohashPrecision",
												Start: ast.Position{
													Column: 83,
													Line:   47,
												},
											},
										},
										Name: "geohashPrecision",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 134,
												Line:   47,
											},
											File:   "geo.flux",
											Source: "maxPrecision: maxGeohashPrecision",
											Start: ast.Position{
												Column: 101,
												Line:   47,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 113,
													Line:   47,
												},
												File:   "geo.flux",
												Source: "maxPrecision",
												Start: ast.Position{
													Column: 101,
													Line:   47,
												},
											},
										},
										Name: "maxPrecision",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 134,
													Line:   47,
												},
												File:   "geo.flux",
												Source: "maxGeohashPrecision",
												Start: ast.Position{
													Column: 115,
													Line:   47,
												},
											},
										},
										Name: "maxGeohashPrecision",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 135,
										Line:   47,
									},
									File:   "geo.flux",
									Source: "getGrid(box: box, minSize: minGridSize, maxSize: maxGridSize, precision: geohashPrecision, maxPrecision: maxGeohashPrecision)",
									Start: ast.Position{
										Column: 10,
										Line:   47,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   47,
										},
										File:   "geo.flux",
										Source: "getGrid",
										Start: ast.Position{
											Column: 10,
											Line:   47,
										},
									},
								},
								Name: "getGrid",
							},
						},
					}, &ast.ReturnStatement{
						Argument: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   49,
										},
										File:   "geo.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 5,
											Line:   49,
										},
									},
								},
								Name: "tables",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   50,
									},
									File:   "geo.flux",
									Source: "tables\n      |> fn(grid: grid)",
									Start: ast.Position{
										Column: 5,
										Line:   49,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   50,
											},
											File:   "geo.flux",
											Source: "grid: grid",
											Start: ast.Position{
												Column: 13,
												Line:   50,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   50,
												},
												File:   "geo.flux",
												Source: "grid: grid",
												Start: ast.Position{
													Column: 13,
													Line:   50,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 17,
														Line:   50,
													},
													File:   "geo.flux",
													Source: "grid",
													Start: ast.Position{
														Column: 13,
														Line:   50,
													},
												},
											},
											Name: "grid",
										},
										Value: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   50,
													},
													File:   "geo.flux",
													Source: "grid",
													Start: ast.Position{
														Column: 19,
														Line:   50,
													},
												},
											},
											Name: "grid",
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   50,
										},
										File:   "geo.flux",
										Source: "fn(grid: grid)",
										Start: ast.Position{
											Column: 10,
											Line:   50,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 12,
												Line:   50,
											},
											File:   "geo.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 10,
												Line:   50,
											},
										},
									},
									Name: "fn",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   50,
								},
								File:   "geo.flux",
								Source: "return\n    tables\n      |> fn(grid: grid)",
								Start: ast.Position{
									Column: 3,
									Line:   48,
								},
							},
						},
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   46,
							},
							File:   "geo.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 15,
								Line:   46,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 15,
									Line:   46,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   46,
							},
							File:   "geo.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 22,
								Line:   46,
							},
						},
					}},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   46,
							},
							File:   "geo.flux",
							Source: "fn=geohashFilter",
							Start: ast.Position{
								Column: 26,
								Line:   46,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "fn",
								Start: ast.Position{
									Column: 26,
									Line:   46,
								},
							},
						},
						Name: "fn",
					},
					Value: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "geohashFilter",
								Start: ast.Position{
									Column: 29,
									Line:   46,
								},
							},
						},
						Name: "geohashFilter",
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 47,
								Line:   46,
							},
							File:   "geo.flux",
							Source: "box",
							Start: ast.Position{
								Column: 44,
								Line:   46,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 47,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "box",
								Start: ast.Position{
									Column: 44,
									Line:   46,
								},
							},
						},
						Name: "box",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 62,
								Line:   46,
							},
							File:   "geo.flux",
							Source: "minGridSize=9",
							Start: ast.Position{
								Column: 49,
								Line:   46,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 60,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "minGridSize",
								Start: ast.Position{
									Column: 49,
									Line:   46,
								},
							},
						},
						Name: "minGridSize",
					},
					Value: &ast.IntegerLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 62,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "9",
								Start: ast.Position{
									Column: 61,
									Line:   46,
								},
							},
						},
						Value: int64(9),
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 78,
								Line:   46,
							},
							File:   "geo.flux",
							Source: "maxGridSize=-1",
							Start: ast.Position{
								Column: 64,
								Line:   46,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 75,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "maxGridSize",
								Start: ast.Position{
									Column: 64,
									Line:   46,
								},
							},
						},
						Name: "maxGridSize",
					},
					Value: &ast.UnaryExpression{
						Argument: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 78,
										Line:   46,
									},
									File:   "geo.flux",
									Source: "1",
									Start: ast.Position{
										Column: 77,
										Line:   46,
									},
								},
							},
							Value: int64(1),
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 78,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "-1",
								Start: ast.Position{
									Column: 76,
									Line:   46,
								},
							},
						},
						Operator: 6,
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 99,
								Line:   46,
							},
							File:   "geo.flux",
							Source: "geohashPrecision=-1",
							Start: ast.Position{
								Column: 80,
								Line:   46,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 96,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "geohashPrecision",
								Start: ast.Position{
									Column: 80,
									Line:   46,
								},
							},
						},
						Name: "geohashPrecision",
					},
					Value: &ast.UnaryExpression{
						Argument: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 99,
										Line:   46,
									},
									File:   "geo.flux",
									Source: "1",
									Start: ast.Position{
										Column: 98,
										Line:   46,
									},
								},
							},
							Value: int64(1),
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 99,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "-1",
								Start: ast.Position{
									Column: 97,
									Line:   46,
								},
							},
						},
						Operator: 6,
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 123,
								Line:   46,
							},
							File:   "geo.flux",
							Source: "maxGeohashPrecision=12",
							Start: ast.Position{
								Column: 101,
								Line:   46,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 120,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "maxGeohashPrecision",
								Start: ast.Position{
									Column: 101,
									Line:   46,
								},
							},
						},
						Name: "maxGeohashPrecision",
					},
					Value: &ast.IntegerLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 123,
									Line:   46,
								},
								File:   "geo.flux",
								Source: "12",
								Start: ast.Position{
									Column: 121,
									Line:   46,
								},
							},
						},
						Value: int64(12),
					},
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 6,
						Line:   59,
					},
					File:   "geo.flux",
					Source: "boxFilter = (tables=<-, box) =>\n  tables\n    |> filter(fn: (r) =>\n      r.lat <= box.maxLat and r.lat >= box.minLat and r.lon <= box.maxLon and r.lon >= box.minLon\n    )",
					Start: ast.Position{
						Column: 1,
						Line:   55,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 10,
							Line:   55,
						},
						File:   "geo.flux",
						Source: "boxFilter",
						Start: ast.Position{
							Column: 1,
							Line:   55,
						},
					},
				},
				Name: "boxFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   59,
						},
						File:   "geo.flux",
						Source: "(tables=<-, box) =>\n  tables\n    |> filter(fn: (r) =>\n      r.lat <= box.maxLat and r.lat >= box.minLat and r.lon <= box.maxLon and r.lon >= box.minLon\n    )",
						Start: ast.Position{
							Column: 13,
							Line:   55,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 9,
									Line:   56,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 3,
									Line:   56,
								},
							},
						},
						Name: "tables",
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 6,
								Line:   59,
							},
							File:   "geo.flux",
							Source: "tables\n    |> filter(fn: (r) =>\n      r.lat <= box.maxLat and r.lat >= box.minLat and r.lon <= box.maxLon and r.lon >= box.minLon\n    )",
							Start: ast.Position{
								Column: 3,
								Line:   56,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 98,
										Line:   58,
									},
									File:   "geo.flux",
									Source: "fn: (r) =>\n      r.lat <= box.maxLat and r.lat >= box.minLat and r.lon <= box.maxLon and r.lon >= box.minLon",
									Start: ast.Position{
										Column: 15,
										Line:   57,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 98,
											Line:   58,
										},
										File:   "geo.flux",
										Source: "fn: (r) =>\n      r.lat <= box.maxLat and r.lat >= box.minLat and r.lon <= box.maxLon and r.lon >= box.minLon",
										Start: ast.Position{
											Column: 15,
											Line:   57,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   57,
											},
											File:   "geo.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 15,
												Line:   57,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.FunctionExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   58,
											},
											File:   "geo.flux",
											Source: "(r) =>\n      r.lat <= box.maxLat and r.lat >= box.minLat and r.lon <= box.maxLon and r.lon >= box.minLon",
											Start: ast.Position{
												Column: 19,
												Line:   57,
											},
										},
									},
									Body: &ast.LogicalExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   58,
												},
												File:   "geo.flux",
												Source: "r.lat <= box.maxLat and r.lat >= box.minLat and r.lon <= box.maxLon and r.lon >= box.minLon",
												Start: ast.Position{
													Column: 7,
													Line:   58,
												},
											},
										},
										Left: &ast.LogicalExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 74,
														Line:   58,
													},
													File:   "geo.flux",
													Source: "r.lat <= box.maxLat and r.lat >= box.minLat and r.lon <= box.maxLon",
													Start: ast.Position{
														Column: 7,
														Line:   58,
													},
												},
											},
											Left: &ast.LogicalExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 50,
															Line:   58,
														},
														File:   "geo.flux",
														Source: "r.lat <= box.maxLat and r.lat >= box.minLat",
														Start: ast.Position{
															Column: 7,
															Line:   58,
														},
													},
												},
												Left: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 26,
																Line:   58,
															},
															File:   "geo.flux",
															Source: "r.lat <= box.maxLat",
															Start: ast.Position{
																Column: 7,
																Line:   58,
															},
														},
													},
													Left: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 12,
																	Line:   58,
																},
																File:   "geo.flux",
																Source: "r.lat",
																Start: ast.Position{
																	Column: 7,
																	Line:   58,
																},
															},
														},
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 8,
																		Line:   58,
																	},
																	File:   "geo.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 7,
																		Line:   58,
																	},
																},
															},
															Name: "r",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 12,
																		Line:   58,
																	},
																	File:   "geo.flux",
																	Source: "lat",
																	Start: ast.Position{
																		Column: 9,
																		Line:   58,
																	},
																},
															},
															Name: "lat",
														},
													},
													Operator: 7,
													Right: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 26,
																	Line:   58,
																},
																File:   "geo.flux",
																Source: "box.maxLat",
																Start: ast.Position{
																	Column: 16,
																	Line:   58,
																},
															},
														},
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 19,
																		Line:   58,
																	},
																	File:   "geo.flux",
																	Source: "box",
																	Start: ast.Position{
																		Column: 16,
																		Line:   58,
																	},
																},
															},
															Name: "box",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 26,
																		Line:   58,
																	},
																	File:   "geo.flux",
																	Source: "maxLat",
																	Start: ast.Position{
																		Column: 20,
																		Line:   58,
																	},
																},
															},
															Name: "maxLat",
														},
													},
												},
												Operator: 1,
												Right: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 50,
																Line:   58,
															},
															File:   "geo.flux",
															Source: "r.lat >= box.minLat",
															Start: ast.Position{
																Column: 31,
																Line:   58,
															},
														},
													},
													Left: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 36,
																	Line:   58,
																},
																File:   "geo.flux",
																Source: "r.lat",
																Start: ast.Position{
																	Column: 31,
																	Line:   58,
																},
															},
														},
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 32,
																		Line:   58,
																	},
																	File:   "geo.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 31,
																		Line:   58,
																	},
																},
															},
															Name: "r",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 36,
																		Line:   58,
																	},
																	File:   "geo.flux",
																	Source: "lat",
																	Start: ast.Position{
																		Column: 33,
																		Line:   58,
																	},
																},
															},
															Name: "lat",
														},
													},
													Operator: 9,
													Right: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 50,
																	Line:   58,
																},
																File:   "geo.flux",
																Source: "box.minLat",
																Start: ast.Position{
																	Column: 40,
																	Line:   58,
																},
															},
														},
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 43,
																		Line:   58,
																	},
																	File:   "geo.flux",
																	Source: "box",
																	Start: ast.Position{
																		Column: 40,
																		Line:   58,
																	},
																},
															},
															Name: "box",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 50,
																		Line:   58,
																	},
																	File:   "geo.flux",
																	Source: "minLat",
																	Start: ast.Position{
																		Column: 44,
																		Line:   58,
																	},
																},
															},
															Name: "minLat",
														},
													},
												},
											},
											Operator: 1,
											Right: &ast.BinaryExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 74,
															Line:   58,
														},
														File:   "geo.flux",
														Source: "r.lon <= box.maxLon",
														Start: ast.Position{
															Column: 55,
															Line:   58,
														},
													},
												},
												Left: &ast.MemberExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 60,
																Line:   58,
															},
															File:   "geo.flux",
															Source: "r.lon",
															Start: ast.Position{
																Column: 55,
																Line:   58,
															},
														},
													},
													Object: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 56,
																	Line:   58,
																},
																File:   "geo.flux",
																Source: "r",
																Start: ast.Position{
																	Column: 55,
																	Line:   58,
																},
															},
														},
														Name: "r",
													},
													Property: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 60,
																	Line:   58,
																},
																File:   "geo.flux",
																Source: "lon",
																Start: ast.Position{
																	Column: 57,
																	Line:   58,
																},
															},
														},
														Name: "lon",
													},
												},
												Operator: 7,
												Right: &ast.MemberExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 74,
																Line:   58,
															},
															File:   "geo.flux",
															Source: "box.maxLon",
															Start: ast.Position{
																Column: 64,
																Line:   58,
															},
														},
													},
													Object: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 67,
																	Line:   58,
																},
																File:   "geo.flux",
																Source: "box",
																Start: ast.Position{
																	Column: 64,
																	Line:   58,
																},
															},
														},
														Name: "box",
													},
													Property: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 74,
																	Line:   58,
																},
																File:   "geo.flux",
																Source: "maxLon",
																Start: ast.Position{
																	Column: 68,
																	Line:   58,
																},
															},
														},
														Name: "maxLon",
													},
												},
											},
										},
										Operator: 1,
										Right: &ast.BinaryExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 98,
														Line:   58,
													},
													File:   "geo.flux",
													Source: "r.lon >= box.minLon",
													Start: ast.Position{
														Column: 79,
														Line:   58,
													},
												},
											},
											Left: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 84,
															Line:   58,
														},
														File:   "geo.flux",
														Source: "r.lon",
														Start: ast.Position{
															Column: 79,
															Line:   58,
														},
													},
												},
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 80,
																Line:   58,
															},
															File:   "geo.flux",
															Source: "r",
															Start: ast.Position{
																Column: 79,
																Line:   58,
															},
														},
													},
													Name: "r",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 84,
																Line:   58,
															},
															File:   "geo.flux",
															Source: "lon",
															Start: ast.Position{
																Column: 81,
																Line:   58,
															},
														},
													},
													Name: "lon",
												},
											},
											Operator: 9,
											Right: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 98,
															Line:   58,
														},
														File:   "geo.flux",
														Source: "box.minLon",
														Start: ast.Position{
															Column: 88,
															Line:   58,
														},
													},
												},
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 91,
																Line:   58,
															},
															File:   "geo.flux",
															Source: "box",
															Start: ast.Position{
																Column: 88,
																Line:   58,
															},
														},
													},
													Name: "box",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 98,
																Line:   58,
															},
															File:   "geo.flux",
															Source: "minLon",
															Start: ast.Position{
																Column: 92,
																Line:   58,
															},
														},
													},
													Name: "minLon",
												},
											},
										},
									},
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 21,
													Line:   57,
												},
												File:   "geo.flux",
												Source: "r",
												Start: ast.Position{
													Column: 20,
													Line:   57,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 21,
														Line:   57,
													},
													File:   "geo.flux",
													Source: "r",
													Start: ast.Position{
														Column: 20,
														Line:   57,
													},
												},
											},
											Name: "r",
										},
										Value: nil,
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   59,
								},
								File:   "geo.flux",
								Source: "filter(fn: (r) =>\n      r.lat <= box.maxLat and r.lat >= box.minLat and r.lon <= box.maxLon and r.lon >= box.minLon\n    )",
								Start: ast.Position{
									Column: 8,
									Line:   57,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 14,
										Line:   57,
									},
									File:   "geo.flux",
									Source: "filter",
									Start: ast.Position{
										Column: 8,
										Line:   57,
									},
								},
							},
							Name: "filter",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   55,
							},
							File:   "geo.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 14,
								Line:   55,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   55,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 14,
									Line:   55,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   55,
							},
							File:   "geo.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 21,
								Line:   55,
							},
						},
					}},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 28,
								Line:   55,
							},
							File:   "geo.flux",
							Source: "box",
							Start: ast.Position{
								Column: 25,
								Line:   55,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   55,
								},
								File:   "geo.flux",
								Source: "box",
								Start: ast.Position{
									Column: 25,
									Line:   55,
								},
							},
						},
						Name: "box",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 6,
						Line:   72,
					},
					File:   "geo.flux",
					Source: "toRows = (tables=<-, correlationKey=[\"_time\"]) =>\n  tables\n    |> pivot(\n      rowKey: correlationKey,\n      columnKey: [\"_field\"],\n      valueColumn: \"_value\"\n    )",
					Start: ast.Position{
						Column: 1,
						Line:   66,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   66,
						},
						File:   "geo.flux",
						Source: "toRows",
						Start: ast.Position{
							Column: 1,
							Line:   66,
						},
					},
				},
				Name: "toRows",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   72,
						},
						File:   "geo.flux",
						Source: "(tables=<-, correlationKey=[\"_time\"]) =>\n  tables\n    |> pivot(\n      rowKey: correlationKey,\n      columnKey: [\"_field\"],\n      valueColumn: \"_value\"\n    )",
						Start: ast.Position{
							Column: 10,
							Line:   66,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 9,
									Line:   67,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 3,
									Line:   67,
								},
							},
						},
						Name: "tables",
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 6,
								Line:   72,
							},
							File:   "geo.flux",
							Source: "tables\n    |> pivot(\n      rowKey: correlationKey,\n      columnKey: [\"_field\"],\n      valueColumn: \"_value\"\n    )",
							Start: ast.Position{
								Column: 3,
								Line:   67,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 28,
										Line:   71,
									},
									File:   "geo.flux",
									Source: "rowKey: correlationKey,\n      columnKey: [\"_field\"],\n      valueColumn: \"_value\"",
									Start: ast.Position{
										Column: 7,
										Line:   69,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 29,
											Line:   69,
										},
										File:   "geo.flux",
										Source: "rowKey: correlationKey",
										Start: ast.Position{
											Column: 7,
											Line:   69,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   69,
											},
											File:   "geo.flux",
											Source: "rowKey",
											Start: ast.Position{
												Column: 7,
												Line:   69,
											},
										},
									},
									Name: "rowKey",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   69,
											},
											File:   "geo.flux",
											Source: "correlationKey",
											Start: ast.Position{
												Column: 15,
												Line:   69,
											},
										},
									},
									Name: "correlationKey",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 28,
											Line:   70,
										},
										File:   "geo.flux",
										Source: "columnKey: [\"_field\"]",
										Start: ast.Position{
											Column: 7,
											Line:   70,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 16,
												Line:   70,
											},
											File:   "geo.flux",
											Source: "columnKey",
											Start: ast.Position{
												Column: 7,
												Line:   70,
											},
										},
									},
									Name: "columnKey",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   70,
											},
											File:   "geo.flux",
											Source: "[\"_field\"]",
											Start: ast.Position{
												Column: 18,
												Line:   70,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   70,
												},
												File:   "geo.flux",
												Source: "\"_field\"",
												Start: ast.Position{
													Column: 19,
													Line:   70,
												},
											},
										},
										Value: "_field",
									}},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 28,
											Line:   71,
										},
										File:   "geo.flux",
										Source: "valueColumn: \"_value\"",
										Start: ast.Position{
											Column: 7,
											Line:   71,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   71,
											},
											File:   "geo.flux",
											Source: "valueColumn",
											Start: ast.Position{
												Column: 7,
												Line:   71,
											},
										},
									},
									Name: "valueColumn",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   71,
											},
											File:   "geo.flux",
											Source: "\"_value\"",
											Start: ast.Position{
												Column: 20,
												Line:   71,
											},
										},
									},
									Value: "_value",
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   72,
								},
								File:   "geo.flux",
								Source: "pivot(\n      rowKey: correlationKey,\n      columnKey: [\"_field\"],\n      valueColumn: \"_value\"\n    )",
								Start: ast.Position{
									Column: 8,
									Line:   68,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   68,
									},
									File:   "geo.flux",
									Source: "pivot",
									Start: ast.Position{
										Column: 8,
										Line:   68,
									},
								},
							},
							Name: "pivot",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   66,
							},
							File:   "geo.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 11,
								Line:   66,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   66,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 11,
									Line:   66,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   66,
							},
							File:   "geo.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 18,
								Line:   66,
							},
						},
					}},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 46,
								Line:   66,
							},
							File:   "geo.flux",
							Source: "correlationKey=[\"_time\"]",
							Start: ast.Position{
								Column: 22,
								Line:   66,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   66,
								},
								File:   "geo.flux",
								Source: "correlationKey",
								Start: ast.Position{
									Column: 22,
									Line:   66,
								},
							},
						},
						Name: "correlationKey",
					},
					Value: &ast.ArrayExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 46,
									Line:   66,
								},
								File:   "geo.flux",
								Source: "[\"_time\"]",
								Start: ast.Position{
									Column: 37,
									Line:   66,
								},
							},
						},
						Elements: []ast.Expression{&ast.StringLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   66,
									},
									File:   "geo.flux",
									Source: "\"_time\"",
									Start: ast.Position{
										Column: 38,
										Line:   66,
									},
								},
							},
							Value: "_time",
						}},
					},
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 122,
						Line:   78,
					},
					File:   "geo.flux",
					Source: "stripMeta = (tables=<-, pattern=/_g\\d+/, except=[]) =>\n  tables\n    |> drop(fn: (column) => column =~ pattern and (length(arr: except) == 0 or not contains(value: column, set: except)))",
					Start: ast.Position{
						Column: 1,
						Line:   76,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 10,
							Line:   76,
						},
						File:   "geo.flux",
						Source: "stripMeta",
						Start: ast.Position{
							Column: 1,
							Line:   76,
						},
					},
				},
				Name: "stripMeta",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 122,
							Line:   78,
						},
						File:   "geo.flux",
						Source: "(tables=<-, pattern=/_g\\d+/, except=[]) =>\n  tables\n    |> drop(fn: (column) => column =~ pattern and (length(arr: except) == 0 or not contains(value: column, set: except)))",
						Start: ast.Position{
							Column: 13,
							Line:   76,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 9,
									Line:   77,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 3,
									Line:   77,
								},
							},
						},
						Name: "tables",
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 122,
								Line:   78,
							},
							File:   "geo.flux",
							Source: "tables\n    |> drop(fn: (column) => column =~ pattern and (length(arr: except) == 0 or not contains(value: column, set: except)))",
							Start: ast.Position{
								Column: 3,
								Line:   77,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 121,
										Line:   78,
									},
									File:   "geo.flux",
									Source: "fn: (column) => column =~ pattern and (length(arr: except) == 0 or not contains(value: column, set: except))",
									Start: ast.Position{
										Column: 13,
										Line:   78,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 121,
											Line:   78,
										},
										File:   "geo.flux",
										Source: "fn: (column) => column =~ pattern and (length(arr: except) == 0 or not contains(value: column, set: except))",
										Start: ast.Position{
											Column: 13,
											Line:   78,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 15,
												Line:   78,
											},
											File:   "geo.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 13,
												Line:   78,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.FunctionExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 121,
												Line:   78,
											},
											File:   "geo.flux",
											Source: "(column) => column =~ pattern and (length(arr: except) == 0 or not contains(value: column, set: except))",
											Start: ast.Position{
												Column: 17,
												Line:   78,
											},
										},
									},
									Body: &ast.LogicalExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 121,
													Line:   78,
												},
												File:   "geo.flux",
												Source: "column =~ pattern and (length(arr: except) == 0 or not contains(value: column, set: except))",
												Start: ast.Position{
													Column: 29,
													Line:   78,
												},
											},
										},
										Left: &ast.BinaryExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   78,
													},
													File:   "geo.flux",
													Source: "column =~ pattern",
													Start: ast.Position{
														Column: 29,
														Line:   78,
													},
												},
											},
											Left: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   78,
														},
														File:   "geo.flux",
														Source: "column",
														Start: ast.Position{
															Column: 29,
															Line:   78,
														},
													},
												},
												Name: "column",
											},
											Operator: 19,
											Right: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 46,
															Line:   78,
														},
														File:   "geo.flux",
														Source: "pattern",
														Start: ast.Position{
															Column: 39,
															Line:   78,
														},
													},
												},
												Name: "pattern",
											},
										},
										Operator: 1,
										Right: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 121,
														Line:   78,
													},
													File:   "geo.flux",
													Source: "(length(arr: except) == 0 or not contains(value: column, set: except))",
													Start: ast.Position{
														Column: 51,
														Line:   78,
													},
												},
											},
											Expression: &ast.LogicalExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 120,
															Line:   78,
														},
														File:   "geo.flux",
														Source: "length(arr: except) == 0 or not contains(value: column, set: except)",
														Start: ast.Position{
															Column: 52,
															Line:   78,
														},
													},
												},
												Left: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 76,
																Line:   78,
															},
															File:   "geo.flux",
															Source: "length(arr: except) == 0",
															Start: ast.Position{
																Column: 52,
																Line:   78,
															},
														},
													},
													Left: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 70,
																		Line:   78,
																	},
																	File:   "geo.flux",
																	Source: "arr: except",
																	Start: ast.Position{
																		Column: 59,
																		Line:   78,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 70,
																			Line:   78,
																		},
																		File:   "geo.flux",
																		Source: "arr: except",
																		Start: ast.Position{
																			Column: 59,
																			Line:   78,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 62,
																				Line:   78,
																			},
																			File:   "geo.flux",
																			Source: "arr",
																			Start: ast.Position{
																				Column: 59,
																				Line:   78,
																			},
																		},
																	},
																	Name: "arr",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 70,
																				Line:   78,
																			},
																			File:   "geo.flux",
																			Source: "except",
																			Start: ast.Position{
																				Column: 64,
																				Line:   78,
																			},
																		},
																	},
																	Name: "except",
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 71,
																	Line:   78,
																},
																File:   "geo.flux",
																Source: "length(arr: except)",
																Start: ast.Position{
																	Column: 52,
																	Line:   78,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 58,
																		Line:   78,
																	},
																	File:   "geo.flux",
																	Source: "length",
																	Start: ast.Position{
																		Column: 52,
																		Line:   78,
																	},
																},
															},
															Name: "length",
														},
													},
													Operator: 17,
													Right: &ast.IntegerLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 76,
																	Line:   78,
																},
																File:   "geo.flux",
																Source: "0",
																Start: ast.Position{
																	Column: 75,
																	Line:   78,
																},
															},
														},
														Value: int64(0),
													},
												},
												Operator: 2,
												Right: &ast.UnaryExpression{
													Argument: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 119,
																		Line:   78,
																	},
																	File:   "geo.flux",
																	Source: "value: column, set: except",
																	Start: ast.Position{
																		Column: 93,
																		Line:   78,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 106,
																			Line:   78,
																		},
																		File:   "geo.flux",
																		Source: "value: column",
																		Start: ast.Position{
																			Column: 93,
																			Line:   78,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 98,
																				Line:   78,
																			},
																			File:   "geo.flux",
																			Source: "value",
																			Start: ast.Position{
																				Column: 93,
																				Line:   78,
																			},
																		},
																	},
																	Name: "value",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 106,
																				Line:   78,
																			},
																			File:   "geo.flux",
																			Source: "column",
																			Start: ast.Position{
																				Column: 100,
																				Line:   78,
																			},
																		},
																	},
																	Name: "column",
																},
															}, &ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 119,
																			Line:   78,
																		},
																		File:   "geo.flux",
																		Source: "set: except",
																		Start: ast.Position{
																			Column: 108,
																			Line:   78,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 111,
																				Line:   78,
																			},
																			File:   "geo.flux",
																			Source: "set",
																			Start: ast.Position{
																				Column: 108,
																				Line:   78,
																			},
																		},
																	},
																	Name: "set",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 119,
																				Line:   78,
																			},
																			File:   "geo.flux",
																			Source: "except",
																			Start: ast.Position{
																				Column: 113,
																				Line:   78,
																			},
																		},
																	},
																	Name: "except",
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 120,
																	Line:   78,
																},
																File:   "geo.flux",
																Source: "contains(value: column, set: except)",
																Start: ast.Position{
																	Column: 84,
																	Line:   78,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 92,
																		Line:   78,
																	},
																	File:   "geo.flux",
																	Source: "contains",
																	Start: ast.Position{
																		Column: 84,
																		Line:   78,
																	},
																},
															},
															Name: "contains",
														},
													},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 120,
																Line:   78,
															},
															File:   "geo.flux",
															Source: "not contains(value: column, set: except)",
															Start: ast.Position{
																Column: 80,
																Line:   78,
															},
														},
													},
													Operator: 13,
												},
											},
										},
									},
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 24,
													Line:   78,
												},
												File:   "geo.flux",
												Source: "column",
												Start: ast.Position{
													Column: 18,
													Line:   78,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 24,
														Line:   78,
													},
													File:   "geo.flux",
													Source: "column",
													Start: ast.Position{
														Column: 18,
														Line:   78,
													},
												},
											},
											Name: "column",
										},
										Value: nil,
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 122,
									Line:   78,
								},
								File:   "geo.flux",
								Source: "drop(fn: (column) => column =~ pattern and (length(arr: except) == 0 or not contains(value: column, set: except)))",
								Start: ast.Position{
									Column: 8,
									Line:   78,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   78,
									},
									File:   "geo.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   78,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   76,
							},
							File:   "geo.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 14,
								Line:   76,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   76,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 14,
									Line:   76,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   76,
							},
							File:   "geo.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 21,
								Line:   76,
							},
						},
					}},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   76,
							},
							File:   "geo.flux",
							Source: "pattern=/_g\\d+/",
							Start: ast.Position{
								Column: 25,
								Line:   76,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 32,
									Line:   76,
								},
								File:   "geo.flux",
								Source: "pattern",
								Start: ast.Position{
									Column: 25,
									Line:   76,
								},
							},
						},
						Name: "pattern",
					},
					Value: &ast.RegexpLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   76,
								},
								File:   "geo.flux",
								Source: "/_g\\d+/",
								Start: ast.Position{
									Column: 33,
									Line:   76,
								},
							},
						},
						Value: regexp.MustCompile("_g\\d+"),
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 51,
								Line:   76,
							},
							File:   "geo.flux",
							Source: "except=[]",
							Start: ast.Position{
								Column: 42,
								Line:   76,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 48,
									Line:   76,
								},
								File:   "geo.flux",
								Source: "except",
								Start: ast.Position{
									Column: 42,
									Line:   76,
								},
							},
						},
						Name: "except",
					},
					Value: &ast.ArrayExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 51,
									Line:   76,
								},
								File:   "geo.flux",
								Source: "[]",
								Start: ast.Position{
									Column: 49,
									Line:   76,
								},
							},
						},
						Elements: nil,
					},
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   113,
					},
					File:   "geo.flux",
					Source: "groupByArea = (tables=<-, newColumn, precision, maxPrecisionIndex, prefix=\"_g\") => {\n  prepared =\n    if precision <= maxPrecisionIndex then\n      tables\n\t    |> duplicate(column: prefix + string(v: precision), as: newColumn)\n    else\n      tables\n        |> map(fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) }))\n\t    |> rename(columns: { _gx: newColumn })\n  return prepared\n    |> group(columns: [newColumn])\n}",
					Start: ast.Position{
						Column: 1,
						Line:   102,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   102,
						},
						File:   "geo.flux",
						Source: "groupByArea",
						Start: ast.Position{
							Column: 1,
							Line:   102,
						},
					},
				},
				Name: "groupByArea",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   113,
						},
						File:   "geo.flux",
						Source: "(tables=<-, newColumn, precision, maxPrecisionIndex, prefix=\"_g\") => {\n  prepared =\n    if precision <= maxPrecisionIndex then\n      tables\n\t    |> duplicate(column: prefix + string(v: precision), as: newColumn)\n    else\n      tables\n        |> map(fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) }))\n\t    |> rename(columns: { _gx: newColumn })\n  return prepared\n    |> group(columns: [newColumn])\n}",
						Start: ast.Position{
							Column: 15,
							Line:   102,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   113,
							},
							File:   "geo.flux",
							Source: "{\n  prepared =\n    if precision <= maxPrecisionIndex then\n      tables\n\t    |> duplicate(column: prefix + string(v: precision), as: newColumn)\n    else\n      tables\n        |> map(fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) }))\n\t    |> rename(columns: { _gx: newColumn })\n  return prepared\n    |> group(columns: [newColumn])\n}",
							Start: ast.Position{
								Column: 84,
								Line:   102,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 44,
									Line:   110,
								},
								File:   "geo.flux",
								Source: "prepared =\n    if precision <= maxPrecisionIndex then\n      tables\n\t    |> duplicate(column: prefix + string(v: precision), as: newColumn)\n    else\n      tables\n        |> map(fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) }))\n\t    |> rename(columns: { _gx: newColumn })",
								Start: ast.Position{
									Column: 3,
									Line:   103,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   103,
									},
									File:   "geo.flux",
									Source: "prepared",
									Start: ast.Position{
										Column: 3,
										Line:   103,
									},
								},
							},
							Name: "prepared",
						},
						Init: &ast.ConditionalExpression{
							Alternate: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   108,
												},
												File:   "geo.flux",
												Source: "tables",
												Start: ast.Position{
													Column: 7,
													Line:   108,
												},
											},
										},
										Name: "tables",
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 102,
												Line:   109,
											},
											File:   "geo.flux",
											Source: "tables\n        |> map(fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) }))",
											Start: ast.Position{
												Column: 7,
												Line:   108,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 101,
														Line:   109,
													},
													File:   "geo.flux",
													Source: "fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) })",
													Start: ast.Position{
														Column: 16,
														Line:   109,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 101,
															Line:   109,
														},
														File:   "geo.flux",
														Source: "fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) })",
														Start: ast.Position{
															Column: 16,
															Line:   109,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 18,
																Line:   109,
															},
															File:   "geo.flux",
															Source: "fn",
															Start: ast.Position{
																Column: 16,
																Line:   109,
															},
														},
													},
													Name: "fn",
												},
												Value: &ast.FunctionExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 101,
																Line:   109,
															},
															File:   "geo.flux",
															Source: "(r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) })",
															Start: ast.Position{
																Column: 20,
																Line:   109,
															},
														},
													},
													Body: &ast.ParenExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 101,
																	Line:   109,
																},
																File:   "geo.flux",
																Source: "({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) })",
																Start: ast.Position{
																	Column: 27,
																	Line:   109,
																},
															},
														},
														Expression: &ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 100,
																		Line:   109,
																	},
																	File:   "geo.flux",
																	Source: "{ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) }",
																	Start: ast.Position{
																		Column: 28,
																		Line:   109,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 98,
																			Line:   109,
																		},
																		File:   "geo.flux",
																		Source: "_gx: strings.substring(v: r.geohash, start:0, end: precision)",
																		Start: ast.Position{
																			Column: 37,
																			Line:   109,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 40,
																				Line:   109,
																			},
																			File:   "geo.flux",
																			Source: "_gx",
																			Start: ast.Position{
																				Column: 37,
																				Line:   109,
																			},
																		},
																	},
																	Name: "_gx",
																},
																Value: &ast.CallExpression{
																	Arguments: []ast.Expression{&ast.ObjectExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 97,
																					Line:   109,
																				},
																				File:   "geo.flux",
																				Source: "v: r.geohash, start:0, end: precision",
																				Start: ast.Position{
																					Column: 60,
																					Line:   109,
																				},
																			},
																		},
																		Properties: []*ast.Property{&ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 72,
																						Line:   109,
																					},
																					File:   "geo.flux",
																					Source: "v: r.geohash",
																					Start: ast.Position{
																						Column: 60,
																						Line:   109,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 61,
																							Line:   109,
																						},
																						File:   "geo.flux",
																						Source: "v",
																						Start: ast.Position{
																							Column: 60,
																							Line:   109,
																						},
																					},
																				},
																				Name: "v",
																			},
																			Value: &ast.MemberExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 72,
																							Line:   109,
																						},
																						File:   "geo.flux",
																						Source: "r.geohash",
																						Start: ast.Position{
																							Column: 63,
																							Line:   109,
																						},
																					},
																				},
																				Object: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 64,
																								Line:   109,
																							},
																							File:   "geo.flux",
																							Source: "r",
																							Start: ast.Position{
																								Column: 63,
																								Line:   109,
																							},
																						},
																					},
																					Name: "r",
																				},
																				Property: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 72,
																								Line:   109,
																							},
																							File:   "geo.flux",
																							Source: "geohash",
																							Start: ast.Position{
																								Column: 65,
																								Line:   109,
																							},
																						},
																					},
																					Name: "geohash",
																				},
																			},
																		}, &ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 81,
																						Line:   109,
																					},
																					File:   "geo.flux",
																					Source: "start:0",
																					Start: ast.Position{
																						Column: 74,
																						Line:   109,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 79,
																							Line:   109,
																						},
																						File:   "geo.flux",
																						Source: "start",
																						Start: ast.Position{
																							Column: 74,
																							Line:   109,
																						},
																					},
																				},
																				Name: "start",
																			},
																			Value: &ast.IntegerLiteral{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 81,
																							Line:   109,
																						},
																						File:   "geo.flux",
																						Source: "0",
																						Start: ast.Position{
																							Column: 80,
																							Line:   109,
																						},
																					},
																				},
																				Value: int64(0),
																			},
																		}, &ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 97,
																						Line:   109,
																					},
																					File:   "geo.flux",
																					Source: "end: precision",
																					Start: ast.Position{
																						Column: 83,
																						Line:   109,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 86,
																							Line:   109,
																						},
																						File:   "geo.flux",
																						Source: "end",
																						Start: ast.Position{
																							Column: 83,
																							Line:   109,
																						},
																					},
																				},
																				Name: "end",
																			},
																			Value: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 97,
																							Line:   109,
																						},
																						File:   "geo.flux",
																						Source: "precision",
																						Start: ast.Position{
																							Column: 88,
																							Line:   109,
																						},
																					},
																				},
																				Name: "precision",
																			},
																		}},
																		With: nil,
																	}},
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 98,
																				Line:   109,
																			},
																			File:   "geo.flux",
																			Source: "strings.substring(v: r.geohash, start:0, end: precision)",
																			Start: ast.Position{
																				Column: 42,
																				Line:   109,
																			},
																		},
																	},
																	Callee: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 59,
																					Line:   109,
																				},
																				File:   "geo.flux",
																				Source: "strings.substring",
																				Start: ast.Position{
																					Column: 42,
																					Line:   109,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 49,
																						Line:   109,
																					},
																					File:   "geo.flux",
																					Source: "strings",
																					Start: ast.Position{
																						Column: 42,
																						Line:   109,
																					},
																				},
																			},
																			Name: "strings",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 59,
																						Line:   109,
																					},
																					File:   "geo.flux",
																					Source: "substring",
																					Start: ast.Position{
																						Column: 50,
																						Line:   109,
																					},
																				},
																			},
																			Name: "substring",
																		},
																	},
																},
															}},
															With: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 31,
																			Line:   109,
																		},
																		File:   "geo.flux",
																		Source: "r",
																		Start: ast.Position{
																			Column: 30,
																			Line:   109,
																		},
																	},
																},
																Name: "r",
															},
														},
													},
													Params: []*ast.Property{&ast.Property{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 22,
																	Line:   109,
																},
																File:   "geo.flux",
																Source: "r",
																Start: ast.Position{
																	Column: 21,
																	Line:   109,
																},
															},
														},
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 22,
																		Line:   109,
																	},
																	File:   "geo.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 21,
																		Line:   109,
																	},
																},
															},
															Name: "r",
														},
														Value: nil,
													}},
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 102,
													Line:   109,
												},
												File:   "geo.flux",
												Source: "map(fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) }))",
												Start: ast.Position{
													Column: 12,
													Line:   109,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 15,
														Line:   109,
													},
													File:   "geo.flux",
													Source: "map",
													Start: ast.Position{
														Column: 12,
														Line:   109,
													},
												},
											},
											Name: "map",
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 44,
											Line:   110,
										},
										File:   "geo.flux",
										Source: "tables\n        |> map(fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) }))\n\t    |> rename(columns: { _gx: newColumn })",
										Start: ast.Position{
											Column: 7,
											Line:   108,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 43,
													Line:   110,
												},
												File:   "geo.flux",
												Source: "columns: { _gx: newColumn }",
												Start: ast.Position{
													Column: 16,
													Line:   110,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 43,
														Line:   110,
													},
													File:   "geo.flux",
													Source: "columns: { _gx: newColumn }",
													Start: ast.Position{
														Column: 16,
														Line:   110,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 23,
															Line:   110,
														},
														File:   "geo.flux",
														Source: "columns",
														Start: ast.Position{
															Column: 16,
															Line:   110,
														},
													},
												},
												Name: "columns",
											},
											Value: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 43,
															Line:   110,
														},
														File:   "geo.flux",
														Source: "{ _gx: newColumn }",
														Start: ast.Position{
															Column: 25,
															Line:   110,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 41,
																Line:   110,
															},
															File:   "geo.flux",
															Source: "_gx: newColumn",
															Start: ast.Position{
																Column: 27,
																Line:   110,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 30,
																	Line:   110,
																},
																File:   "geo.flux",
																Source: "_gx",
																Start: ast.Position{
																	Column: 27,
																	Line:   110,
																},
															},
														},
														Name: "_gx",
													},
													Value: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 41,
																	Line:   110,
																},
																File:   "geo.flux",
																Source: "newColumn",
																Start: ast.Position{
																	Column: 32,
																	Line:   110,
																},
															},
														},
														Name: "newColumn",
													},
												}},
												With: nil,
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   110,
											},
											File:   "geo.flux",
											Source: "rename(columns: { _gx: newColumn })",
											Start: ast.Position{
												Column: 9,
												Line:   110,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   110,
												},
												File:   "geo.flux",
												Source: "rename",
												Start: ast.Position{
													Column: 9,
													Line:   110,
												},
											},
										},
										Name: "rename",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 44,
										Line:   110,
									},
									File:   "geo.flux",
									Source: "if precision <= maxPrecisionIndex then\n      tables\n\t    |> duplicate(column: prefix + string(v: precision), as: newColumn)\n    else\n      tables\n        |> map(fn: (r) => ({ r with _gx: strings.substring(v: r.geohash, start:0, end: precision) }))\n\t    |> rename(columns: { _gx: newColumn })",
									Start: ast.Position{
										Column: 5,
										Line:   104,
									},
								},
							},
							Consequent: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   105,
											},
											File:   "geo.flux",
											Source: "tables",
											Start: ast.Position{
												Column: 7,
												Line:   105,
											},
										},
									},
									Name: "tables",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 72,
											Line:   106,
										},
										File:   "geo.flux",
										Source: "tables\n\t    |> duplicate(column: prefix + string(v: precision), as: newColumn)",
										Start: ast.Position{
											Column: 7,
											Line:   105,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 71,
													Line:   106,
												},
												File:   "geo.flux",
												Source: "column: prefix + string(v: precision), as: newColumn",
												Start: ast.Position{
													Column: 19,
													Line:   106,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 56,
														Line:   106,
													},
													File:   "geo.flux",
													Source: "column: prefix + string(v: precision)",
													Start: ast.Position{
														Column: 19,
														Line:   106,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 25,
															Line:   106,
														},
														File:   "geo.flux",
														Source: "column",
														Start: ast.Position{
															Column: 19,
															Line:   106,
														},
													},
												},
												Name: "column",
											},
											Value: &ast.BinaryExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 56,
															Line:   106,
														},
														File:   "geo.flux",
														Source: "prefix + string(v: precision)",
														Start: ast.Position{
															Column: 27,
															Line:   106,
														},
													},
												},
												Left: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 33,
																Line:   106,
															},
															File:   "geo.flux",
															Source: "prefix",
															Start: ast.Position{
																Column: 27,
																Line:   106,
															},
														},
													},
													Name: "prefix",
												},
												Operator: 5,
												Right: &ast.CallExpression{
													Arguments: []ast.Expression{&ast.ObjectExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 55,
																	Line:   106,
																},
																File:   "geo.flux",
																Source: "v: precision",
																Start: ast.Position{
																	Column: 43,
																	Line:   106,
																},
															},
														},
														Properties: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 55,
																		Line:   106,
																	},
																	File:   "geo.flux",
																	Source: "v: precision",
																	Start: ast.Position{
																		Column: 43,
																		Line:   106,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 44,
																			Line:   106,
																		},
																		File:   "geo.flux",
																		Source: "v",
																		Start: ast.Position{
																			Column: 43,
																			Line:   106,
																		},
																	},
																},
																Name: "v",
															},
															Value: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 55,
																			Line:   106,
																		},
																		File:   "geo.flux",
																		Source: "precision",
																		Start: ast.Position{
																			Column: 46,
																			Line:   106,
																		},
																	},
																},
																Name: "precision",
															},
														}},
														With: nil,
													}},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 56,
																Line:   106,
															},
															File:   "geo.flux",
															Source: "string(v: precision)",
															Start: ast.Position{
																Column: 36,
																Line:   106,
															},
														},
													},
													Callee: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 42,
																	Line:   106,
																},
																File:   "geo.flux",
																Source: "string",
																Start: ast.Position{
																	Column: 36,
																	Line:   106,
																},
															},
														},
														Name: "string",
													},
												},
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 71,
														Line:   106,
													},
													File:   "geo.flux",
													Source: "as: newColumn",
													Start: ast.Position{
														Column: 58,
														Line:   106,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 60,
															Line:   106,
														},
														File:   "geo.flux",
														Source: "as",
														Start: ast.Position{
															Column: 58,
															Line:   106,
														},
													},
												},
												Name: "as",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 71,
															Line:   106,
														},
														File:   "geo.flux",
														Source: "newColumn",
														Start: ast.Position{
															Column: 62,
															Line:   106,
														},
													},
												},
												Name: "newColumn",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 72,
												Line:   106,
											},
											File:   "geo.flux",
											Source: "duplicate(column: prefix + string(v: precision), as: newColumn)",
											Start: ast.Position{
												Column: 9,
												Line:   106,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 18,
													Line:   106,
												},
												File:   "geo.flux",
												Source: "duplicate",
												Start: ast.Position{
													Column: 9,
													Line:   106,
												},
											},
										},
										Name: "duplicate",
									},
								},
							},
							Test: &ast.BinaryExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 38,
											Line:   104,
										},
										File:   "geo.flux",
										Source: "precision <= maxPrecisionIndex",
										Start: ast.Position{
											Column: 8,
											Line:   104,
										},
									},
								},
								Left: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   104,
											},
											File:   "geo.flux",
											Source: "precision",
											Start: ast.Position{
												Column: 8,
												Line:   104,
											},
										},
									},
									Name: "precision",
								},
								Operator: 7,
								Right: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 38,
												Line:   104,
											},
											File:   "geo.flux",
											Source: "maxPrecisionIndex",
											Start: ast.Position{
												Column: 21,
												Line:   104,
											},
										},
									},
									Name: "maxPrecisionIndex",
								},
							},
						},
					}, &ast.ReturnStatement{
						Argument: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 18,
											Line:   111,
										},
										File:   "geo.flux",
										Source: "prepared",
										Start: ast.Position{
											Column: 10,
											Line:   111,
										},
									},
								},
								Name: "prepared",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   112,
									},
									File:   "geo.flux",
									Source: "prepared\n    |> group(columns: [newColumn])",
									Start: ast.Position{
										Column: 10,
										Line:   111,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 34,
												Line:   112,
											},
											File:   "geo.flux",
											Source: "columns: [newColumn]",
											Start: ast.Position{
												Column: 14,
												Line:   112,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 34,
													Line:   112,
												},
												File:   "geo.flux",
												Source: "columns: [newColumn]",
												Start: ast.Position{
													Column: 14,
													Line:   112,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 21,
														Line:   112,
													},
													File:   "geo.flux",
													Source: "columns",
													Start: ast.Position{
														Column: 14,
														Line:   112,
													},
												},
											},
											Name: "columns",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 34,
														Line:   112,
													},
													File:   "geo.flux",
													Source: "[newColumn]",
													Start: ast.Position{
														Column: 23,
														Line:   112,
													},
												},
											},
											Elements: []ast.Expression{&ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 33,
															Line:   112,
														},
														File:   "geo.flux",
														Source: "newColumn",
														Start: ast.Position{
															Column: 24,
															Line:   112,
														},
													},
												},
												Name: "newColumn",
											}},
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   112,
										},
										File:   "geo.flux",
										Source: "group(columns: [newColumn])",
										Start: ast.Position{
											Column: 8,
											Line:   112,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   112,
											},
											File:   "geo.flux",
											Source: "group",
											Start: ast.Position{
												Column: 8,
												Line:   112,
											},
										},
									},
									Name: "group",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   112,
								},
								File:   "geo.flux",
								Source: "return prepared\n    |> group(columns: [newColumn])",
								Start: ast.Position{
									Column: 3,
									Line:   111,
								},
							},
						},
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   102,
							},
							File:   "geo.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 16,
								Line:   102,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   102,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 16,
									Line:   102,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   102,
							},
							File:   "geo.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 23,
								Line:   102,
							},
						},
					}},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   102,
							},
							File:   "geo.flux",
							Source: "newColumn",
							Start: ast.Position{
								Column: 27,
								Line:   102,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   102,
								},
								File:   "geo.flux",
								Source: "newColumn",
								Start: ast.Position{
									Column: 27,
									Line:   102,
								},
							},
						},
						Name: "newColumn",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 47,
								Line:   102,
							},
							File:   "geo.flux",
							Source: "precision",
							Start: ast.Position{
								Column: 38,
								Line:   102,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 47,
									Line:   102,
								},
								File:   "geo.flux",
								Source: "precision",
								Start: ast.Position{
									Column: 38,
									Line:   102,
								},
							},
						},
						Name: "precision",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 66,
								Line:   102,
							},
							File:   "geo.flux",
							Source: "maxPrecisionIndex",
							Start: ast.Position{
								Column: 49,
								Line:   102,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 66,
									Line:   102,
								},
								File:   "geo.flux",
								Source: "maxPrecisionIndex",
								Start: ast.Position{
									Column: 49,
									Line:   102,
								},
							},
						},
						Name: "maxPrecisionIndex",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 79,
								Line:   102,
							},
							File:   "geo.flux",
							Source: "prefix=\"_g\"",
							Start: ast.Position{
								Column: 68,
								Line:   102,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 74,
									Line:   102,
								},
								File:   "geo.flux",
								Source: "prefix",
								Start: ast.Position{
									Column: 68,
									Line:   102,
								},
							},
						},
						Name: "prefix",
					},
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 79,
									Line:   102,
								},
								File:   "geo.flux",
								Source: "\"_g\"",
								Start: ast.Position{
									Column: 75,
									Line:   102,
								},
							},
						},
						Value: "_g",
					},
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 30,
						Line:   120,
					},
					File:   "geo.flux",
					Source: "asTracks = (tables=<-, groupBy=[\"id\",\"tid\"], orderBy=[\"_time\"]) =>\n  tables\n    |> group(columns: groupBy)\n    |> sort(columns: orderBy)",
					Start: ast.Position{
						Column: 1,
						Line:   117,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   117,
						},
						File:   "geo.flux",
						Source: "asTracks",
						Start: ast.Position{
							Column: 1,
							Line:   117,
						},
					},
				},
				Name: "asTracks",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 30,
							Line:   120,
						},
						File:   "geo.flux",
						Source: "(tables=<-, groupBy=[\"id\",\"tid\"], orderBy=[\"_time\"]) =>\n  tables\n    |> group(columns: groupBy)\n    |> sort(columns: orderBy)",
						Start: ast.Position{
							Column: 12,
							Line:   117,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   118,
									},
									File:   "geo.flux",
									Source: "tables",
									Start: ast.Position{
										Column: 3,
										Line:   118,
									},
								},
							},
							Name: "tables",
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   119,
								},
								File:   "geo.flux",
								Source: "tables\n    |> group(columns: groupBy)",
								Start: ast.Position{
									Column: 3,
									Line:   118,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   119,
										},
										File:   "geo.flux",
										Source: "columns: groupBy",
										Start: ast.Position{
											Column: 14,
											Line:   119,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   119,
											},
											File:   "geo.flux",
											Source: "columns: groupBy",
											Start: ast.Position{
												Column: 14,
												Line:   119,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 21,
													Line:   119,
												},
												File:   "geo.flux",
												Source: "columns",
												Start: ast.Position{
													Column: 14,
													Line:   119,
												},
											},
										},
										Name: "columns",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   119,
												},
												File:   "geo.flux",
												Source: "groupBy",
												Start: ast.Position{
													Column: 23,
													Line:   119,
												},
											},
										},
										Name: "groupBy",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   119,
									},
									File:   "geo.flux",
									Source: "group(columns: groupBy)",
									Start: ast.Position{
										Column: 8,
										Line:   119,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   119,
										},
										File:   "geo.flux",
										Source: "group",
										Start: ast.Position{
											Column: 8,
											Line:   119,
										},
									},
								},
								Name: "group",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 30,
								Line:   120,
							},
							File:   "geo.flux",
							Source: "tables\n    |> group(columns: groupBy)\n    |> sort(columns: orderBy)",
							Start: ast.Position{
								Column: 3,
								Line:   118,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   120,
									},
									File:   "geo.flux",
									Source: "columns: orderBy",
									Start: ast.Position{
										Column: 13,
										Line:   120,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 29,
											Line:   120,
										},
										File:   "geo.flux",
										Source: "columns: orderBy",
										Start: ast.Position{
											Column: 13,
											Line:   120,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   120,
											},
											File:   "geo.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   120,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   120,
											},
											File:   "geo.flux",
											Source: "orderBy",
											Start: ast.Position{
												Column: 22,
												Line:   120,
											},
										},
									},
									Name: "orderBy",
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   120,
								},
								File:   "geo.flux",
								Source: "sort(columns: orderBy)",
								Start: ast.Position{
									Column: 8,
									Line:   120,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   120,
									},
									File:   "geo.flux",
									Source: "sort",
									Start: ast.Position{
										Column: 8,
										Line:   120,
									},
								},
							},
							Name: "sort",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 22,
								Line:   117,
							},
							File:   "geo.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 13,
								Line:   117,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   117,
								},
								File:   "geo.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 13,
									Line:   117,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 22,
								Line:   117,
							},
							File:   "geo.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 20,
								Line:   117,
							},
						},
					}},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 44,
								Line:   117,
							},
							File:   "geo.flux",
							Source: "groupBy=[\"id\",\"tid\"]",
							Start: ast.Position{
								Column: 24,
								Line:   117,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   117,
								},
								File:   "geo.flux",
								Source: "groupBy",
								Start: ast.Position{
									Column: 24,
									Line:   117,
								},
							},
						},
						Name: "groupBy",
					},
					Value: &ast.ArrayExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 44,
									Line:   117,
								},
								File:   "geo.flux",
								Source: "[\"id\",\"tid\"]",
								Start: ast.Position{
									Column: 32,
									Line:   117,
								},
							},
						},
						Elements: []ast.Expression{&ast.StringLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 37,
										Line:   117,
									},
									File:   "geo.flux",
									Source: "\"id\"",
									Start: ast.Position{
										Column: 33,
										Line:   117,
									},
								},
							},
							Value: "id",
						}, &ast.StringLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 43,
										Line:   117,
									},
									File:   "geo.flux",
									Source: "\"tid\"",
									Start: ast.Position{
										Column: 38,
										Line:   117,
									},
								},
							},
							Value: "tid",
						}},
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 63,
								Line:   117,
							},
							File:   "geo.flux",
							Source: "orderBy=[\"_time\"]",
							Start: ast.Position{
								Column: 46,
								Line:   117,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 53,
									Line:   117,
								},
								File:   "geo.flux",
								Source: "orderBy",
								Start: ast.Position{
									Column: 46,
									Line:   117,
								},
							},
						},
						Name: "orderBy",
					},
					Value: &ast.ArrayExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 63,
									Line:   117,
								},
								File:   "geo.flux",
								Source: "[\"_time\"]",
								Start: ast.Position{
									Column: 54,
									Line:   117,
								},
							},
						},
						Elements: []ast.Expression{&ast.StringLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 62,
										Line:   117,
									},
									File:   "geo.flux",
									Source: "\"_time\"",
									Start: ast.Position{
										Column: 55,
										Line:   117,
									},
								},
							},
							Value: "_time",
						}},
					},
				}},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "geo.flux",
					Source: "import \"strings\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "geo.flux",
						Source: "\"strings\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "strings",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "geo.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   2,
					},
					File:   "geo.flux",
					Source: "package geo",
					Start: ast.Position{
						Column: 1,
						Line:   2,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   2,
						},
						File:   "geo.flux",
						Source: "geo",
						Start: ast.Position{
							Column: 9,
							Line:   2,
						},
					},
				},
				Name: "geo",
			},
		},
	}},
	Package: "geo",
	Path:    "experimental/geo",
}
